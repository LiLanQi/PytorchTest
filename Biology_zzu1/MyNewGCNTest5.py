#encoding=utf-8
import dgl
import numpy as np
from torch import nn
from torch.utils.data import Dataset, DataLoader
from torchvision import transforms, utils
from tensorboardX import SummaryWriter

import argparse
import os

from MyCIGCN import MyCIGCN

import torch
from tqdm import tqdm
from sklearn.model_selection import train_test_split
#可以适合任何溶剂+溶质
from tools import EarlyStopping, adjust_learning_rate

parser = argparse.ArgumentParser(description='Finetune')
parser.add_argument('--batchsize', type=int, default=4)
parser.add_argument('--ACE_result_src', type=str, default='../data/newACE/ACE-LJ.xvg')
parser.add_argument('--ACE_data_src', type=str, default='../data/newACE/ACE_pdb')
parser.add_argument('--NMF_result_src', type=str, default='../data/newNMF/NMF-LJ.xvg')
parser.add_argument('--NMF_data_src', type=str, default='../data/newNMF/NMF_pdb')
parser.add_argument('--lr', type=float, default=1e-2)
parser.add_argument('--lradj', type=str, default='type1', help='adjust learning rate')
# parser.add_argument('--momentum', type=float, default=0.9)
# parser.add_argument('--decay', type=float, default=5e-4)
parser.add_argument('--dropout', type=float, default=0)
parser.add_argument('--patience', type=int, default=10, help='early stopping patience')

DEVICE = torch.device('cuda:2')
args = parser.parse_args()
writer = SummaryWriter('MynewGCNTest5')

dict_solute = {}


def normalize(mx):
    """Row-normalize sparse matrix"""
    mx = mx.numpy()
    rowsum = np.array(mx.sum(1))             # 对每一个特征进行归一化
    r_inv = np.power(rowsum, -1).flatten()
    r_inv[np.isinf(r_inv)] = 0.
    r_mat_inv = np.diag(r_inv)
    mx = r_mat_inv.dot(mx)
    mx = torch.from_numpy(mx)
    return mx

def get_solute_position(rootdir):
    label_index = [1]
    solute_to_index = {}
    path_list = readFileData("ACE", rootdir,label_index) #直接设置ACE即可，因为所有溶质都是一样的
    for path in path_list:
        file = open(path, "r")
        file_list = file.readlines()
        for i in range(5, 173 + 5):
            temp_data = file_list[i].strip().split('1.00  0.00')[0][26:].strip()
            temp_data = temp_data.split('.')
            temp_atom = file_list[i][13:16].strip()  # 该点所对应的原子
            dict_solute[temp_atom] = i-5
            solute_to_index[i-5] = temp_atom
        break
    return dict_solute, solute_to_index

def get_solvent_position(rootdir, solvent):
    dict_solvent = {}
    solvent_to_index = {}
    if (solvent == "ACE"):
        botom_index = 8
    elif (solvent == "NMF"):
        botom_index = 11
    label_index = [1]
    path_list = readFileData(solvent, rootdir, label_index)
    for path in path_list:
        file = open(path, "r")
        file_list = file.readlines()
        left = len(file_list) - botom_index
        right = len(file_list) - 2
        for i in range(left, right):
            temp_data = file_list[i].strip().split('1.00  0.00')[0][26:].strip()
            temp_data = temp_data.split('.')
            temp_atom = file_list[i][13:16].strip()  # 该点所对应的原子
            dict_solvent[temp_atom] = i-left
            solvent_to_index[i-left] = temp_atom
        break
    return dict_solvent, solvent_to_index


# 返回一个结果张量
def readFileResult(root_dir):
    file = open(root_dir, "r")
    file_list = file.readlines()
    result_list = []
    for i in range(0, 100000):
        temp_data = file_list[i].strip().split('  ')[-1].strip()
        temp_data = float(temp_data)
        result_list.append(temp_data)
    result = torch.tensor(result_list)
    return result
ACE_total_labels = readFileResult(args.ACE_result_src)
NMF_total_labels = readFileResult(args.NMF_result_src)

def readFileData(solvent, root_dir, lable_index):
    path_list = []
    for i in range(len(lable_index)):
        j = lable_index[i]
        temp_path = solvent + str(j) + ".pdb"
        path = os.path.join(root_dir, temp_path)
        path_list.append(path)
    # path_list.append(os.path.join(root_dir,"md/origin.pdb")) 暂时不需要
    return path_list

def get_solute_adj(solute_to_index):
    solute_feature = []
    solute_adj = torch.zeros(173*12,173*12)
    #184条边
    bonds = 'S1-O3', 'S1-O4', 'S1-F1', 'S1-O1', 'O1-C3', 'C3-C4', 'C4-H3', 'C4-C5', 'C5-H4', 'C5-C6', 'C6-C1', 'C1-H1', 'C1-C2', 'C2-H2', 'C2-C3', 'C6-C19', 'C19-C14', 'C14-C13', 'C13-H9', 'C13-C18', 'C18-H12', 'C18-C17', 'C17-C16', 'C16-H11', 'C16-C15', 'C15-H10', 'C15-C14', 'C17-O2', 'O2-S2', 'S2-O5', 'S2-O6', 'S2-F2', 'C19-H13', 'C19-C10', 'C10-C11', 'C11-H7', 'C11-C12', 'C12-H8', 'C12-C7', 'C7-C8', 'C8-H5', 'C8-C9', 'C9-H6', 'C9-C10', 'C7-O25', 'O25-S8', 'S8-O26', 'S8-O27', 'S8-O22', 'O22-C64', 'C64-C69', 'C69-H47', 'C69-C68', 'C68-H46', 'C68-C67', 'C67-C66', 'C66-H45', 'C66-C65', 'C65-H44', 'C65-C64', 'C67-C76', 'C76-H52', 'C76-C71', 'C71-C70', 'C70-H48', 'C70-C75', 'C75-H51', 'C75-C74', 'C74-C73', 'C73-H50', 'C73-C72', 'C72-H49', 'C72-C71', 'C74-O24', 'O24-S9', 'S9-O29', 'S9-O30', 'S9-O28', 'O28-C26', 'C26-C27', 'C27-H18', 'C27-C28', 'C28-H19', 'C28-C29', 'C29-C30', 'C30-H20', 'C30-C31', 'C31-H21', 'C31-C26', 'C29-C38', 'C38-H26', 'C38-C25', 'C25-C20', 'C20-H14', 'C20-C21', 'C21-H15', 'C21-C22', 'C22-C23', 'C23-H16', 'C23-C24', 'C24-H17', 'C24-C25', 'C22-O7', 'O7-S3', 'S3-O9', 'S3-O10', 'S3-F3', 'C38-C33', 'C33-C32', 'C32-H22', 'C32-C37', 'C37-H25', 'C37-C36', 'C36-C35', 'C35-H24', 'C35-C34', 'C34-H23', 'C34-C33', 'C36-O8', 'O8-S4', 'S4-O11', 'S4-O12', 'S4-F4', 'C76-C63', 'C63-C62', 'C62-H43', 'C62-C61', 'C61-H42', 'C61-C60', 'C60-C59', 'C59-H41', 'C59-C58', 'C58-H40', 'C58-C63', 'C60-O23', 'O23-S7', 'S7-O20', 'S7-O21', 'S7-O17', 'O17-C55', 'C55-C56', 'C56-H38', 'C56-C51', 'C51-H35', 'C51-C52', 'C52-C53', 'C53-H36', 'C53-C54', 'C54-C55', 'C54-H37', 'C52-C57', 'C57-H39', 'C57-C48', 'C48-C47', 'C47-H32', 'C47-C46', 'C46-H31', 'C46-C45', 'C45-C50', 'C50-H34', 'C50-C49', 'C49-H33', 'C49-C48', 'C45-O13', 'O13-S5', 'S5-O14', 'S5-O15', 'S5-F5', 'C57-C44', 'C44-C43', 'C43-H30', 'C43-C42', 'C42-H29', 'C42-C41', 'C41-C40', 'C40-H28', 'C40-C39', 'C39-H27', 'C39-C44', 'C41-O16', 'O16-S6', 'S6-O18', 'S6-O19', 'S6-F6'
    Bond_order = [2.0, 2.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.5, 1.0, 1.5, 1.5, 1.0, 1.5, 1.0, 1.5, 1.0, 1.0, 1.5, 1.0, 1.5,
                  1.0, 1.5, 1.5, 1.0, 1.5, 1.0, 1.5, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.5, 1.0, 1.5, 1.5,
                  1.0, 1.5, 1.0, 1.5, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.5, 1.0, 1.5, 1.0, 1.5, 1.5, 1.0, 1.5, 1.0, 1.5,
                  1.0, 1.0, 1.0, 1.5, 1.0, 1.5, 1.0, 1.5, 1.5, 1.0, 1.5, 1.0, 1.5, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.5,
                  1.0, 1.5, 1.0, 1.5, 1.5, 1.0, 1.5, 1.0, 1.5, 1.0, 1.0, 1.0, 1.5, 1.0, 1.5, 1.0, 1.5, 1.5, 1.0, 1.5,
                  1.0, 1.5, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.5, 1.0, 1.5, 1.0, 1.5, 1.5, 1.0, 1.5, 1.0, 1.5, 1.0, 1.0,
                  2.0, 2.0, 1.0, 1.0, 1.5, 1.0, 1.5, 1.0, 1.5, 1.5, 1.0, 1.5, 1.0, 1.5, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0,
                  1.5, 1.0, 1.5, 1.0, 1.5, 1.5, 1.0, 1.5, 1.5, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.5, 1.0, 1.5, 1.5, 1.0,
                  1.5, 1.0, 1.5, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.5, 1.0, 1.5, 1.0, 1.5, 1.5, 1.0, 1.5, 1.0, 1.5, 1.0,
                  1.0, 2.0, 2.0, 1.0]
    index = 0
    bonds_to_index = {}
    for connect_atom in bonds:
        left_atom = connect_atom.split("-")[0]
        right_atom = connect_atom.split("-")[-1]
        bonds_to_index[connect_atom] = index
        index += 1
        for i in range(12):
            left_atom_value = dict_solute[left_atom] + 173 * i
            right_atom_value = dict_solute[right_atom] + 173 * i
            solute_adj[left_atom_value][right_atom_value] = 1
            solute_adj[right_atom_value][left_atom_value] = 1
    for i in range(173):
        for j in range(173):
            if (solute_adj[i][j] == 1):
                left_atom = solute_to_index[i]
                right_atom = solute_to_index[j]
                bonds1 = left_atom + "-" + right_atom
                bonds2 = right_atom + "-" + left_atom
                if bonds1 in bonds_to_index:
                    bond_index = bonds_to_index[bonds1]
                elif bonds2 in bonds_to_index:
                    bond_index = bonds_to_index[bonds2]
                solute_feature.append(Bond_order[bond_index])
    # solute_adj = normalize(solute_adj + torch.eye(2076, 2076))
    solute_feature = torch.tensor(solute_feature) #(368)
    temp = solute_feature
    for i in range(11):
        solute_feature = torch.cat((solute_feature,temp))#(4416)
    solute_feature = solute_feature.reshape(-1, 1)
    #solute_edge_list = [(0, 1), (1, 0), (1, 2), (1, 3), (1, 4), (2, 1), (3, 1), (4, 1), (4, 5), (5, 4), (5, 6), (5, 10), (6, 5), (6, 7), (6, 9), (7, 6), (7, 8), (7, 14), (8, 7), (9, 6), (10, 5), (10, 11), (10, 12), (11, 10), (12, 10), (12, 13), (12, 14), (13, 12), (14, 7), (14, 12), (14, 15), (15, 14), (15, 16), (15, 31), (15, 32), (16, 15), (16, 17), (16, 21), (17, 16), (17, 18), (17, 30), (18, 17), (18, 19), (18, 29), (19, 18), (19, 20), (19, 24), (20, 19), (20, 21), (20, 23), (21, 16), (21, 20), (21, 22), (22, 21), (23, 20), (24, 19), (24, 25), (25, 24), (25, 26), (25, 27), (25, 28), (26, 25), (27, 25), (28, 25), (29, 18), (30, 17), (31, 15), (32, 15), (32, 33), (32, 37), (33, 32), (33, 34), (33, 36), (34, 33), (34, 35), (34, 41), (35, 34), (36, 33), (37, 32), (37, 38), (37, 39), (38, 37), (39, 37), (39, 40), (39, 41), (40, 39), (41, 34), (41, 39), (41, 42), (42, 41), (42, 43), (43, 42), (43, 44), (43, 45), (43, 46), (44, 43), (45, 43), (46, 43), (46, 47), (47, 46), (47, 48), (47, 52), (48, 47), (48, 49), (48, 51), (49, 48), (49, 50), (49, 56), (50, 49), (51, 48), (52, 47), (52, 53), (52, 54), (53, 52), (54, 52), (54, 55), (54, 56), (55, 54), (56, 49), (56, 54), (56, 57), (57, 56), (57, 58), (57, 115), (57, 116), (58, 57), (58, 59), (58, 63), (59, 58), (59, 60), (59, 114), (60, 59), (60, 61), (60, 113), (61, 60), (61, 62), (61, 66), (62, 61), (62, 63), (62, 65), (63, 58), (63, 62), (63, 64), (64, 63), (65, 62), (66, 61), (66, 67), (67, 66), (67, 68), (67, 111), (67, 112), (68, 67), (68, 69), (69, 68), (69, 70), (69, 74), (70, 69), (70, 71), (70, 110), (71, 70), (71, 72), (71, 109), (72, 71), (72, 73), (72, 77), (73, 72), (73, 74), (73, 76), (74, 69), (74, 73), (74, 75), (75, 74), (76, 73), (77, 72), (77, 78), (77, 93), (77, 108), (78, 77), (78, 79), (78, 83), (79, 78), (79, 80), (79, 92), (80, 79), (80, 81), (80, 91), (81, 80), (81, 82), (81, 86), (82, 81), (82, 83), (82, 85), (83, 78), (83, 82), (83, 84), (84, 83), (85, 82), (86, 81), (86, 87), (87, 86), (87, 88), (87, 89), (87, 90), (88, 87), (89, 87), (90, 87), (91, 80), (92, 79), (93, 77), (93, 94), (93, 98), (94, 93), (94, 95), (94, 107), (95, 94), (95, 96), (95, 106), (96, 95), (96, 97), (96, 101), (97, 96), (97, 98), (97, 100), (98, 93), (98, 97), (98, 99), (99, 98), (100, 97), (101, 96), (101, 102), (102, 101), (102, 103), (102, 104), (102, 105), (103, 102), (104, 102), (105, 102), (106, 95), (107, 94), (108, 77), (109, 71), (110, 70), (111, 67), (112, 67), (113, 60), (114, 59), (115, 57), (116, 57), (116, 117), (116, 121), (117, 116), (117, 118), (117, 120), (118, 117), (118, 119), (118, 125), (119, 118), (120, 117), (121, 116), (121, 122), (121, 123), (122, 121), (123, 121), (123, 124), (123, 125), (124, 123), (125, 118), (125, 123), (125, 126), (126, 125), (126, 127), (127, 126), (127, 128), (127, 129), (127, 130), (128, 127), (129, 127), (130, 127), (130, 131), (131, 130), (131, 132), (131, 136), (132, 131), (132, 133), (132, 135), (133, 132), (133, 134), (133, 140), (134, 133), (135, 132), (136, 131), (136, 137), (136, 138), (137, 136), (138, 136), (138, 139), (138, 140), (139, 138), (140, 133), (140, 138), (140, 141), (141, 140), (141, 142), (141, 157), (141, 158), (142, 141), (142, 143), (142, 147), (143, 142), (143, 144), (143, 156), (144, 143), (144, 145), (144, 155), (145, 144), (145, 146), (145, 150), (146, 145), (146, 147), (146, 149), (147, 142), (147, 146), (147, 148), (148, 147), (149, 146), (150, 145), (150, 151), (151, 150), (151, 152), (151, 153), (151, 154), (152, 151), (153, 151), (154, 151), (155, 144), (156, 143), (157, 141), (158, 141), (158, 159), (158, 163), (159, 158), (159, 160), (159, 162), (160, 159), (160, 161), (160, 167), (161, 160), (162, 159), (163, 158), (163, 164), (163, 165), (164, 163), (165, 163), (165, 166), (165, 167), (166, 165), (167, 160), (167, 165), (167, 168), (168, 167), (168, 169), (169, 168), (169, 170), (169, 171), (169, 172), (170, 169), (171, 169), (172, 169), (173, 174), (174, 173), (174, 175), (174, 176), (174, 177), (175, 174), (176, 174), (177, 174), (177, 178), (178, 177), (178, 179), (178, 183), (179, 178), (179, 180), (179, 182), (180, 179), (180, 181), (180, 187), (181, 180), (182, 179), (183, 178), (183, 184), (183, 185), (184, 183), (185, 183), (185, 186), (185, 187), (186, 185), (187, 180), (187, 185), (187, 188), (188, 187), (188, 189), (188, 204), (188, 205), (189, 188), (189, 190), (189, 194), (190, 189), (190, 191), (190, 203), (191, 190), (191, 192), (191, 202), (192, 191), (192, 193), (192, 197), (193, 192), (193, 194), (193, 196), (194, 189), (194, 193), (194, 195), (195, 194), (196, 193), (197, 192), (197, 198), (198, 197), (198, 199), (198, 200), (198, 201), (199, 198), (200, 198), (201, 198), (202, 191), (203, 190), (204, 188), (205, 188), (205, 206), (205, 210), (206, 205), (206, 207), (206, 209), (207, 206), (207, 208), (207, 214), (208, 207), (209, 206), (210, 205), (210, 211), (210, 212), (211, 210), (212, 210), (212, 213), (212, 214), (213, 212), (214, 207), (214, 212), (214, 215), (215, 214), (215, 216), (216, 215), (216, 217), (216, 218), (216, 219), (217, 216), (218, 216), (219, 216), (219, 220), (220, 219), (220, 221), (220, 225), (221, 220), (221, 222), (221, 224), (222, 221), (222, 223), (222, 229), (223, 222), (224, 221), (225, 220), (225, 226), (225, 227), (226, 225), (227, 225), (227, 228), (227, 229), (228, 227), (229, 222), (229, 227), (229, 230), (230, 229), (230, 231), (230, 288), (230, 289), (231, 230), (231, 232), (231, 236), (232, 231), (232, 233), (232, 287), (233, 232), (233, 234), (233, 286), (234, 233), (234, 235), (234, 239), (235, 234), (235, 236), (235, 238), (236, 231), (236, 235), (236, 237), (237, 236), (238, 235), (239, 234), (239, 240), (240, 239), (240, 241), (240, 284), (240, 285), (241, 240), (241, 242), (242, 241), (242, 243), (242, 247), (243, 242), (243, 244), (243, 283), (244, 243), (244, 245), (244, 282), (245, 244), (245, 246), (245, 250), (246, 245), (246, 247), (246, 249), (247, 242), (247, 246), (247, 248), (248, 247), (249, 246), (250, 245), (250, 251), (250, 266), (250, 281), (251, 250), (251, 252), (251, 256), (252, 251), (252, 253), (252, 265), (253, 252), (253, 254), (253, 264), (254, 253), (254, 255), (254, 259), (255, 254), (255, 256), (255, 258), (256, 251), (256, 255), (256, 257), (257, 256), (258, 255), (259, 254), (259, 260), (260, 259), (260, 261), (260, 262), (260, 263), (261, 260), (262, 260), (263, 260), (264, 253), (265, 252), (266, 250), (266, 267), (266, 271), (267, 266), (267, 268), (267, 280), (268, 267), (268, 269), (268, 279), (269, 268), (269, 270), (269, 274), (270, 269), (270, 271), (270, 273), (271, 266), (271, 270), (271, 272), (272, 271), (273, 270), (274, 269), (274, 275), (275, 274), (275, 276), (275, 277), (275, 278), (276, 275), (277, 275), (278, 275), (279, 268), (280, 267), (281, 250), (282, 244), (283, 243), (284, 240), (285, 240), (286, 233), (287, 232), (288, 230), (289, 230), (289, 290), (289, 294), (290, 289), (290, 291), (290, 293), (291, 290), (291, 292), (291, 298), (292, 291), (293, 290), (294, 289), (294, 295), (294, 296), (295, 294), (296, 294), (296, 297), (296, 298), (297, 296), (298, 291), (298, 296), (298, 299), (299, 298), (299, 300), (300, 299), (300, 301), (300, 302), (300, 303), (301, 300), (302, 300), (303, 300), (303, 304), (304, 303), (304, 305), (304, 309), (305, 304), (305, 306), (305, 308), (306, 305), (306, 307), (306, 313), (307, 306), (308, 305), (309, 304), (309, 310), (309, 311), (310, 309), (311, 309), (311, 312), (311, 313), (312, 311), (313, 306), (313, 311), (313, 314), (314, 313), (314, 315), (314, 330), (314, 331), (315, 314), (315, 316), (315, 320), (316, 315), (316, 317), (316, 329), (317, 316), (317, 318), (317, 328), (318, 317), (318, 319), (318, 323), (319, 318), (319, 320), (319, 322), (320, 315), (320, 319), (320, 321), (321, 320), (322, 319), (323, 318), (323, 324), (324, 323), (324, 325), (324, 326), (324, 327), (325, 324), (326, 324), (327, 324), (328, 317), (329, 316), (330, 314), (331, 314), (331, 332), (331, 336), (332, 331), (332, 333), (332, 335), (333, 332), (333, 334), (333, 340), (334, 333), (335, 332), (336, 331), (336, 337), (336, 338), (337, 336), (338, 336), (338, 339), (338, 340), (339, 338), (340, 333), (340, 338), (340, 341), (341, 340), (341, 342), (342, 341), (342, 343), (342, 344), (342, 345), (343, 342), (344, 342), (345, 342), (346, 347), (347, 346), (347, 348), (347, 349), (347, 350), (348, 347), (349, 347), (350, 347), (350, 351), (351, 350), (351, 352), (351, 356), (352, 351), (352, 353), (352, 355), (353, 352), (353, 354), (353, 360), (354, 353), (355, 352), (356, 351), (356, 357), (356, 358), (357, 356), (358, 356), (358, 359), (358, 360), (359, 358), (360, 353), (360, 358), (360, 361), (361, 360), (361, 362), (361, 377), (361, 378), (362, 361), (362, 363), (362, 367), (363, 362), (363, 364), (363, 376), (364, 363), (364, 365), (364, 375), (365, 364), (365, 366), (365, 370), (366, 365), (366, 367), (366, 369), (367, 362), (367, 366), (367, 368), (368, 367), (369, 366), (370, 365), (370, 371), (371, 370), (371, 372), (371, 373), (371, 374), (372, 371), (373, 371), (374, 371), (375, 364), (376, 363), (377, 361), (378, 361), (378, 379), (378, 383), (379, 378), (379, 380), (379, 382), (380, 379), (380, 381), (380, 387), (381, 380), (382, 379), (383, 378), (383, 384), (383, 385), (384, 383), (385, 383), (385, 386), (385, 387), (386, 385), (387, 380), (387, 385), (387, 388), (388, 387), (388, 389), (389, 388), (389, 390), (389, 391), (389, 392), (390, 389), (391, 389), (392, 389), (392, 393), (393, 392), (393, 394), (393, 398), (394, 393), (394, 395), (394, 397), (395, 394), (395, 396), (395, 402), (396, 395), (397, 394), (398, 393), (398, 399), (398, 400), (399, 398), (400, 398), (400, 401), (400, 402), (401, 400), (402, 395), (402, 400), (402, 403), (403, 402), (403, 404), (403, 461), (403, 462), (404, 403), (404, 405), (404, 409), (405, 404), (405, 406), (405, 460), (406, 405), (406, 407), (406, 459), (407, 406), (407, 408), (407, 412), (408, 407), (408, 409), (408, 411), (409, 404), (409, 408), (409, 410), (410, 409), (411, 408), (412, 407), (412, 413), (413, 412), (413, 414), (413, 457), (413, 458), (414, 413), (414, 415), (415, 414), (415, 416), (415, 420), (416, 415), (416, 417), (416, 456), (417, 416), (417, 418), (417, 455), (418, 417), (418, 419), (418, 423), (419, 418), (419, 420), (419, 422), (420, 415), (420, 419), (420, 421), (421, 420), (422, 419), (423, 418), (423, 424), (423, 439), (423, 454), (424, 423), (424, 425), (424, 429), (425, 424), (425, 426), (425, 438), (426, 425), (426, 427), (426, 437), (427, 426), (427, 428), (427, 432), (428, 427), (428, 429), (428, 431), (429, 424), (429, 428), (429, 430), (430, 429), (431, 428), (432, 427), (432, 433), (433, 432), (433, 434), (433, 435), (433, 436), (434, 433), (435, 433), (436, 433), (437, 426), (438, 425), (439, 423), (439, 440), (439, 444), (440, 439), (440, 441), (440, 453), (441, 440), (441, 442), (441, 452), (442, 441), (442, 443), (442, 447), (443, 442), (443, 444), (443, 446), (444, 439), (444, 443), (444, 445), (445, 444), (446, 443), (447, 442), (447, 448), (448, 447), (448, 449), (448, 450), (448, 451), (449, 448), (450, 448), (451, 448), (452, 441), (453, 440), (454, 423), (455, 417), (456, 416), (457, 413), (458, 413), (459, 406), (460, 405), (461, 403), (462, 403), (462, 463), (462, 467), (463, 462), (463, 464), (463, 466), (464, 463), (464, 465), (464, 471), (465, 464), (466, 463), (467, 462), (467, 468), (467, 469), (468, 467), (469, 467), (469, 470), (469, 471), (470, 469), (471, 464), (471, 469), (471, 472), (472, 471), (472, 473), (473, 472), (473, 474), (473, 475), (473, 476), (474, 473), (475, 473), (476, 473), (476, 477), (477, 476), (477, 478), (477, 482), (478, 477), (478, 479), (478, 481), (479, 478), (479, 480), (479, 486), (480, 479), (481, 478), (482, 477), (482, 483), (482, 484), (483, 482), (484, 482), (484, 485), (484, 486), (485, 484), (486, 479), (486, 484), (486, 487), (487, 486), (487, 488), (487, 503), (487, 504), (488, 487), (488, 489), (488, 493), (489, 488), (489, 490), (489, 502), (490, 489), (490, 491), (490, 501), (491, 490), (491, 492), (491, 496), (492, 491), (492, 493), (492, 495), (493, 488), (493, 492), (493, 494), (494, 493), (495, 492), (496, 491), (496, 497), (497, 496), (497, 498), (497, 499), (497, 500), (498, 497), (499, 497), (500, 497), (501, 490), (502, 489), (503, 487), (504, 487), (504, 505), (504, 509), (505, 504), (505, 506), (505, 508), (506, 505), (506, 507), (506, 513), (507, 506), (508, 505), (509, 504), (509, 510), (509, 511), (510, 509), (511, 509), (511, 512), (511, 513), (512, 511), (513, 506), (513, 511), (513, 514), (514, 513), (514, 515), (515, 514), (515, 516), (515, 517), (515, 518), (516, 515), (517, 515), (518, 515), (519, 520), (520, 519), (520, 521), (520, 522), (520, 523), (521, 520), (522, 520), (523, 520), (523, 524), (524, 523), (524, 525), (524, 529), (525, 524), (525, 526), (525, 528), (526, 525), (526, 527), (526, 533), (527, 526), (528, 525), (529, 524), (529, 530), (529, 531), (530, 529), (531, 529), (531, 532), (531, 533), (532, 531), (533, 526), (533, 531), (533, 534), (534, 533), (534, 535), (534, 550), (534, 551), (535, 534), (535, 536), (535, 540), (536, 535), (536, 537), (536, 549), (537, 536), (537, 538), (537, 548), (538, 537), (538, 539), (538, 543), (539, 538), (539, 540), (539, 542), (540, 535), (540, 539), (540, 541), (541, 540), (542, 539), (543, 538), (543, 544), (544, 543), (544, 545), (544, 546), (544, 547), (545, 544), (546, 544), (547, 544), (548, 537), (549, 536), (550, 534), (551, 534), (551, 552), (551, 556), (552, 551), (552, 553), (552, 555), (553, 552), (553, 554), (553, 560), (554, 553), (555, 552), (556, 551), (556, 557), (556, 558), (557, 556), (558, 556), (558, 559), (558, 560), (559, 558), (560, 553), (560, 558), (560, 561), (561, 560), (561, 562), (562, 561), (562, 563), (562, 564), (562, 565), (563, 562), (564, 562), (565, 562), (565, 566), (566, 565), (566, 567), (566, 571), (567, 566), (567, 568), (567, 570), (568, 567), (568, 569), (568, 575), (569, 568), (570, 567), (571, 566), (571, 572), (571, 573), (572, 571), (573, 571), (573, 574), (573, 575), (574, 573), (575, 568), (575, 573), (575, 576), (576, 575), (576, 577), (576, 634), (576, 635), (577, 576), (577, 578), (577, 582), (578, 577), (578, 579), (578, 633), (579, 578), (579, 580), (579, 632), (580, 579), (580, 581), (580, 585), (581, 580), (581, 582), (581, 584), (582, 577), (582, 581), (582, 583), (583, 582), (584, 581), (585, 580), (585, 586), (586, 585), (586, 587), (586, 630), (586, 631), (587, 586), (587, 588), (588, 587), (588, 589), (588, 593), (589, 588), (589, 590), (589, 629), (590, 589), (590, 591), (590, 628), (591, 590), (591, 592), (591, 596), (592, 591), (592, 593), (592, 595), (593, 588), (593, 592), (593, 594), (594, 593), (595, 592), (596, 591), (596, 597), (596, 612), (596, 627), (597, 596), (597, 598), (597, 602), (598, 597), (598, 599), (598, 611), (599, 598), (599, 600), (599, 610), (600, 599), (600, 601), (600, 605), (601, 600), (601, 602), (601, 604), (602, 597), (602, 601), (602, 603), (603, 602), (604, 601), (605, 600), (605, 606), (606, 605), (606, 607), (606, 608), (606, 609), (607, 606), (608, 606), (609, 606), (610, 599), (611, 598), (612, 596), (612, 613), (612, 617), (613, 612), (613, 614), (613, 626), (614, 613), (614, 615), (614, 625), (615, 614), (615, 616), (615, 620), (616, 615), (616, 617), (616, 619), (617, 612), (617, 616), (617, 618), (618, 617), (619, 616), (620, 615), (620, 621), (621, 620), (621, 622), (621, 623), (621, 624), (622, 621), (623, 621), (624, 621), (625, 614), (626, 613), (627, 596), (628, 590), (629, 589), (630, 586), (631, 586), (632, 579), (633, 578), (634, 576), (635, 576), (635, 636), (635, 640), (636, 635), (636, 637), (636, 639), (637, 636), (637, 638), (637, 644), (638, 637), (639, 636), (640, 635), (640, 641), (640, 642), (641, 640), (642, 640), (642, 643), (642, 644), (643, 642), (644, 637), (644, 642), (644, 645), (645, 644), (645, 646), (646, 645), (646, 647), (646, 648), (646, 649), (647, 646), (648, 646), (649, 646), (649, 650), (650, 649), (650, 651), (650, 655), (651, 650), (651, 652), (651, 654), (652, 651), (652, 653), (652, 659), (653, 652), (654, 651), (655, 650), (655, 656), (655, 657), (656, 655), (657, 655), (657, 658), (657, 659), (658, 657), (659, 652), (659, 657), (659, 660), (660, 659), (660, 661), (660, 676), (660, 677), (661, 660), (661, 662), (661, 666), (662, 661), (662, 663), (662, 675), (663, 662), (663, 664), (663, 674), (664, 663), (664, 665), (664, 669), (665, 664), (665, 666), (665, 668), (666, 661), (666, 665), (666, 667), (667, 666), (668, 665), (669, 664), (669, 670), (670, 669), (670, 671), (670, 672), (670, 673), (671, 670), (672, 670), (673, 670), (674, 663), (675, 662), (676, 660), (677, 660), (677, 678), (677, 682), (678, 677), (678, 679), (678, 681), (679, 678), (679, 680), (679, 686), (680, 679), (681, 678), (682, 677), (682, 683), (682, 684), (683, 682), (684, 682), (684, 685), (684, 686), (685, 684), (686, 679), (686, 684), (686, 687), (687, 686), (687, 688), (688, 687), (688, 689), (688, 690), (688, 691), (689, 688), (690, 688), (691, 688), (692, 693), (693, 692), (693, 694), (693, 695), (693, 696), (694, 693), (695, 693), (696, 693), (696, 697), (697, 696), (697, 698), (697, 702), (698, 697), (698, 699), (698, 701), (699, 698), (699, 700), (699, 706), (700, 699), (701, 698), (702, 697), (702, 703), (702, 704), (703, 702), (704, 702), (704, 705), (704, 706), (705, 704), (706, 699), (706, 704), (706, 707), (707, 706), (707, 708), (707, 723), (707, 724), (708, 707), (708, 709), (708, 713), (709, 708), (709, 710), (709, 722), (710, 709), (710, 711), (710, 721), (711, 710), (711, 712), (711, 716), (712, 711), (712, 713), (712, 715), (713, 708), (713, 712), (713, 714), (714, 713), (715, 712), (716, 711), (716, 717), (717, 716), (717, 718), (717, 719), (717, 720), (718, 717), (719, 717), (720, 717), (721, 710), (722, 709), (723, 707), (724, 707), (724, 725), (724, 729), (725, 724), (725, 726), (725, 728), (726, 725), (726, 727), (726, 733), (727, 726), (728, 725), (729, 724), (729, 730), (729, 731), (730, 729), (731, 729), (731, 732), (731, 733), (732, 731), (733, 726), (733, 731), (733, 734), (734, 733), (734, 735), (735, 734), (735, 736), (735, 737), (735, 738), (736, 735), (737, 735), (738, 735), (738, 739), (739, 738), (739, 740), (739, 744), (740, 739), (740, 741), (740, 743), (741, 740), (741, 742), (741, 748), (742, 741), (743, 740), (744, 739), (744, 745), (744, 746), (745, 744), (746, 744), (746, 747), (746, 748), (747, 746), (748, 741), (748, 746), (748, 749), (749, 748), (749, 750), (749, 807), (749, 808), (750, 749), (750, 751), (750, 755), (751, 750), (751, 752), (751, 806), (752, 751), (752, 753), (752, 805), (753, 752), (753, 754), (753, 758), (754, 753), (754, 755), (754, 757), (755, 750), (755, 754), (755, 756), (756, 755), (757, 754), (758, 753), (758, 759), (759, 758), (759, 760), (759, 803), (759, 804), (760, 759), (760, 761), (761, 760), (761, 762), (761, 766), (762, 761), (762, 763), (762, 802), (763, 762), (763, 764), (763, 801), (764, 763), (764, 765), (764, 769), (765, 764), (765, 766), (765, 768), (766, 761), (766, 765), (766, 767), (767, 766), (768, 765), (769, 764), (769, 770), (769, 785), (769, 800), (770, 769), (770, 771), (770, 775), (771, 770), (771, 772), (771, 784), (772, 771), (772, 773), (772, 783), (773, 772), (773, 774), (773, 778), (774, 773), (774, 775), (774, 777), (775, 770), (775, 774), (775, 776), (776, 775), (777, 774), (778, 773), (778, 779), (779, 778), (779, 780), (779, 781), (779, 782), (780, 779), (781, 779), (782, 779), (783, 772), (784, 771), (785, 769), (785, 786), (785, 790), (786, 785), (786, 787), (786, 799), (787, 786), (787, 788), (787, 798), (788, 787), (788, 789), (788, 793), (789, 788), (789, 790), (789, 792), (790, 785), (790, 789), (790, 791), (791, 790), (792, 789), (793, 788), (793, 794), (794, 793), (794, 795), (794, 796), (794, 797), (795, 794), (796, 794), (797, 794), (798, 787), (799, 786), (800, 769), (801, 763), (802, 762), (803, 759), (804, 759), (805, 752), (806, 751), (807, 749), (808, 749), (808, 809), (808, 813), (809, 808), (809, 810), (809, 812), (810, 809), (810, 811), (810, 817), (811, 810), (812, 809), (813, 808), (813, 814), (813, 815), (814, 813), (815, 813), (815, 816), (815, 817), (816, 815), (817, 810), (817, 815), (817, 818), (818, 817), (818, 819), (819, 818), (819, 820), (819, 821), (819, 822), (820, 819), (821, 819), (822, 819), (822, 823), (823, 822), (823, 824), (823, 828), (824, 823), (824, 825), (824, 827), (825, 824), (825, 826), (825, 832), (826, 825), (827, 824), (828, 823), (828, 829), (828, 830), (829, 828), (830, 828), (830, 831), (830, 832), (831, 830), (832, 825), (832, 830), (832, 833), (833, 832), (833, 834), (833, 849), (833, 850), (834, 833), (834, 835), (834, 839), (835, 834), (835, 836), (835, 848), (836, 835), (836, 837), (836, 847), (837, 836), (837, 838), (837, 842), (838, 837), (838, 839), (838, 841), (839, 834), (839, 838), (839, 840), (840, 839), (841, 838), (842, 837), (842, 843), (843, 842), (843, 844), (843, 845), (843, 846), (844, 843), (845, 843), (846, 843), (847, 836), (848, 835), (849, 833), (850, 833), (850, 851), (850, 855), (851, 850), (851, 852), (851, 854), (852, 851), (852, 853), (852, 859), (853, 852), (854, 851), (855, 850), (855, 856), (855, 857), (856, 855), (857, 855), (857, 858), (857, 859), (858, 857), (859, 852), (859, 857), (859, 860), (860, 859), (860, 861), (861, 860), (861, 862), (861, 863), (861, 864), (862, 861), (863, 861), (864, 861), (865, 866), (866, 865), (866, 867), (866, 868), (866, 869), (867, 866), (868, 866), (869, 866), (869, 870), (870, 869), (870, 871), (870, 875), (871, 870), (871, 872), (871, 874), (872, 871), (872, 873), (872, 879), (873, 872), (874, 871), (875, 870), (875, 876), (875, 877), (876, 875), (877, 875), (877, 878), (877, 879), (878, 877), (879, 872), (879, 877), (879, 880), (880, 879), (880, 881), (880, 896), (880, 897), (881, 880), (881, 882), (881, 886), (882, 881), (882, 883), (882, 895), (883, 882), (883, 884), (883, 894), (884, 883), (884, 885), (884, 889), (885, 884), (885, 886), (885, 888), (886, 881), (886, 885), (886, 887), (887, 886), (888, 885), (889, 884), (889, 890), (890, 889), (890, 891), (890, 892), (890, 893), (891, 890), (892, 890), (893, 890), (894, 883), (895, 882), (896, 880), (897, 880), (897, 898), (897, 902), (898, 897), (898, 899), (898, 901), (899, 898), (899, 900), (899, 906), (900, 899), (901, 898), (902, 897), (902, 903), (902, 904), (903, 902), (904, 902), (904, 905), (904, 906), (905, 904), (906, 899), (906, 904), (906, 907), (907, 906), (907, 908), (908, 907), (908, 909), (908, 910), (908, 911), (909, 908), (910, 908), (911, 908), (911, 912), (912, 911), (912, 913), (912, 917), (913, 912), (913, 914), (913, 916), (914, 913), (914, 915), (914, 921), (915, 914), (916, 913), (917, 912), (917, 918), (917, 919), (918, 917), (919, 917), (919, 920), (919, 921), (920, 919), (921, 914), (921, 919), (921, 922), (922, 921), (922, 923), (922, 980), (922, 981), (923, 922), (923, 924), (923, 928), (924, 923), (924, 925), (924, 979), (925, 924), (925, 926), (925, 978), (926, 925), (926, 927), (926, 931), (927, 926), (927, 928), (927, 930), (928, 923), (928, 927), (928, 929), (929, 928), (930, 927), (931, 926), (931, 932), (932, 931), (932, 933), (932, 976), (932, 977), (933, 932), (933, 934), (934, 933), (934, 935), (934, 939), (935, 934), (935, 936), (935, 975), (936, 935), (936, 937), (936, 974), (937, 936), (937, 938), (937, 942), (938, 937), (938, 939), (938, 941), (939, 934), (939, 938), (939, 940), (940, 939), (941, 938), (942, 937), (942, 943), (942, 958), (942, 973), (943, 942), (943, 944), (943, 948), (944, 943), (944, 945), (944, 957), (945, 944), (945, 946), (945, 956), (946, 945), (946, 947), (946, 951), (947, 946), (947, 948), (947, 950), (948, 943), (948, 947), (948, 949), (949, 948), (950, 947), (951, 946), (951, 952), (952, 951), (952, 953), (952, 954), (952, 955), (953, 952), (954, 952), (955, 952), (956, 945), (957, 944), (958, 942), (958, 959), (958, 963), (959, 958), (959, 960), (959, 972), (960, 959), (960, 961), (960, 971), (961, 960), (961, 962), (961, 966), (962, 961), (962, 963), (962, 965), (963, 958), (963, 962), (963, 964), (964, 963), (965, 962), (966, 961), (966, 967), (967, 966), (967, 968), (967, 969), (967, 970), (968, 967), (969, 967), (970, 967), (971, 960), (972, 959), (973, 942), (974, 936), (975, 935), (976, 932), (977, 932), (978, 925), (979, 924), (980, 922), (981, 922), (981, 982), (981, 986), (982, 981), (982, 983), (982, 985), (983, 982), (983, 984), (983, 990), (984, 983), (985, 982), (986, 981), (986, 987), (986, 988), (987, 986), (988, 986), (988, 989), (988, 990), (989, 988), (990, 983), (990, 988), (990, 991), (991, 990), (991, 992), (992, 991), (992, 993), (992, 994), (992, 995), (993, 992), (994, 992), (995, 992), (995, 996), (996, 995), (996, 997), (996, 1001), (997, 996), (997, 998), (997, 1000), (998, 997), (998, 999), (998, 1005), (999, 998), (1000, 997), (1001, 996), (1001, 1002), (1001, 1003), (1002, 1001), (1003, 1001), (1003, 1004), (1003, 1005), (1004, 1003), (1005, 998), (1005, 1003), (1005, 1006), (1006, 1005), (1006, 1007), (1006, 1022), (1006, 1023), (1007, 1006), (1007, 1008), (1007, 1012), (1008, 1007), (1008, 1009), (1008, 1021), (1009, 1008), (1009, 1010), (1009, 1020), (1010, 1009), (1010, 1011), (1010, 1015), (1011, 1010), (1011, 1012), (1011, 1014), (1012, 1007), (1012, 1011), (1012, 1013), (1013, 1012), (1014, 1011), (1015, 1010), (1015, 1016), (1016, 1015), (1016, 1017), (1016, 1018), (1016, 1019), (1017, 1016), (1018, 1016), (1019, 1016), (1020, 1009), (1021, 1008), (1022, 1006), (1023, 1006), (1023, 1024), (1023, 1028), (1024, 1023), (1024, 1025), (1024, 1027), (1025, 1024), (1025, 1026), (1025, 1032), (1026, 1025), (1027, 1024), (1028, 1023), (1028, 1029), (1028, 1030), (1029, 1028), (1030, 1028), (1030, 1031), (1030, 1032), (1031, 1030), (1032, 1025), (1032, 1030), (1032, 1033), (1033, 1032), (1033, 1034), (1034, 1033), (1034, 1035), (1034, 1036), (1034, 1037), (1035, 1034), (1036, 1034), (1037, 1034), (1038, 1039), (1039, 1038), (1039, 1040), (1039, 1041), (1039, 1042), (1040, 1039), (1041, 1039), (1042, 1039), (1042, 1043), (1043, 1042), (1043, 1044), (1043, 1048), (1044, 1043), (1044, 1045), (1044, 1047), (1045, 1044), (1045, 1046), (1045, 1052), (1046, 1045), (1047, 1044), (1048, 1043), (1048, 1049), (1048, 1050), (1049, 1048), (1050, 1048), (1050, 1051), (1050, 1052), (1051, 1050), (1052, 1045), (1052, 1050), (1052, 1053), (1053, 1052), (1053, 1054), (1053, 1069), (1053, 1070), (1054, 1053), (1054, 1055), (1054, 1059), (1055, 1054), (1055, 1056), (1055, 1068), (1056, 1055), (1056, 1057), (1056, 1067), (1057, 1056), (1057, 1058), (1057, 1062), (1058, 1057), (1058, 1059), (1058, 1061), (1059, 1054), (1059, 1058), (1059, 1060), (1060, 1059), (1061, 1058), (1062, 1057), (1062, 1063), (1063, 1062), (1063, 1064), (1063, 1065), (1063, 1066), (1064, 1063), (1065, 1063), (1066, 1063), (1067, 1056), (1068, 1055), (1069, 1053), (1070, 1053), (1070, 1071), (1070, 1075), (1071, 1070), (1071, 1072), (1071, 1074), (1072, 1071), (1072, 1073), (1072, 1079), (1073, 1072), (1074, 1071), (1075, 1070), (1075, 1076), (1075, 1077), (1076, 1075), (1077, 1075), (1077, 1078), (1077, 1079), (1078, 1077), (1079, 1072), (1079, 1077), (1079, 1080), (1080, 1079), (1080, 1081), (1081, 1080), (1081, 1082), (1081, 1083), (1081, 1084), (1082, 1081), (1083, 1081), (1084, 1081), (1084, 1085), (1085, 1084), (1085, 1086), (1085, 1090), (1086, 1085), (1086, 1087), (1086, 1089), (1087, 1086), (1087, 1088), (1087, 1094), (1088, 1087), (1089, 1086), (1090, 1085), (1090, 1091), (1090, 1092), (1091, 1090), (1092, 1090), (1092, 1093), (1092, 1094), (1093, 1092), (1094, 1087), (1094, 1092), (1094, 1095), (1095, 1094), (1095, 1096), (1095, 1153), (1095, 1154), (1096, 1095), (1096, 1097), (1096, 1101), (1097, 1096), (1097, 1098), (1097, 1152), (1098, 1097), (1098, 1099), (1098, 1151), (1099, 1098), (1099, 1100), (1099, 1104), (1100, 1099), (1100, 1101), (1100, 1103), (1101, 1096), (1101, 1100), (1101, 1102), (1102, 1101), (1103, 1100), (1104, 1099), (1104, 1105), (1105, 1104), (1105, 1106), (1105, 1149), (1105, 1150), (1106, 1105), (1106, 1107), (1107, 1106), (1107, 1108), (1107, 1112), (1108, 1107), (1108, 1109), (1108, 1148), (1109, 1108), (1109, 1110), (1109, 1147), (1110, 1109), (1110, 1111), (1110, 1115), (1111, 1110), (1111, 1112), (1111, 1114), (1112, 1107), (1112, 1111), (1112, 1113), (1113, 1112), (1114, 1111), (1115, 1110), (1115, 1116), (1115, 1131), (1115, 1146), (1116, 1115), (1116, 1117), (1116, 1121), (1117, 1116), (1117, 1118), (1117, 1130), (1118, 1117), (1118, 1119), (1118, 1129), (1119, 1118), (1119, 1120), (1119, 1124), (1120, 1119), (1120, 1121), (1120, 1123), (1121, 1116), (1121, 1120), (1121, 1122), (1122, 1121), (1123, 1120), (1124, 1119), (1124, 1125), (1125, 1124), (1125, 1126), (1125, 1127), (1125, 1128), (1126, 1125), (1127, 1125), (1128, 1125), (1129, 1118), (1130, 1117), (1131, 1115), (1131, 1132), (1131, 1136), (1132, 1131), (1132, 1133), (1132, 1145), (1133, 1132), (1133, 1134), (1133, 1144), (1134, 1133), (1134, 1135), (1134, 1139), (1135, 1134), (1135, 1136), (1135, 1138), (1136, 1131), (1136, 1135), (1136, 1137), (1137, 1136), (1138, 1135), (1139, 1134), (1139, 1140), (1140, 1139), (1140, 1141), (1140, 1142), (1140, 1143), (1141, 1140), (1142, 1140), (1143, 1140), (1144, 1133), (1145, 1132), (1146, 1115), (1147, 1109), (1148, 1108), (1149, 1105), (1150, 1105), (1151, 1098), (1152, 1097), (1153, 1095), (1154, 1095), (1154, 1155), (1154, 1159), (1155, 1154), (1155, 1156), (1155, 1158), (1156, 1155), (1156, 1157), (1156, 1163), (1157, 1156), (1158, 1155), (1159, 1154), (1159, 1160), (1159, 1161), (1160, 1159), (1161, 1159), (1161, 1162), (1161, 1163), (1162, 1161), (1163, 1156), (1163, 1161), (1163, 1164), (1164, 1163), (1164, 1165), (1165, 1164), (1165, 1166), (1165, 1167), (1165, 1168), (1166, 1165), (1167, 1165), (1168, 1165), (1168, 1169), (1169, 1168), (1169, 1170), (1169, 1174), (1170, 1169), (1170, 1171), (1170, 1173), (1171, 1170), (1171, 1172), (1171, 1178), (1172, 1171), (1173, 1170), (1174, 1169), (1174, 1175), (1174, 1176), (1175, 1174), (1176, 1174), (1176, 1177), (1176, 1178), (1177, 1176), (1178, 1171), (1178, 1176), (1178, 1179), (1179, 1178), (1179, 1180), (1179, 1195), (1179, 1196), (1180, 1179), (1180, 1181), (1180, 1185), (1181, 1180), (1181, 1182), (1181, 1194), (1182, 1181), (1182, 1183), (1182, 1193), (1183, 1182), (1183, 1184), (1183, 1188), (1184, 1183), (1184, 1185), (1184, 1187), (1185, 1180), (1185, 1184), (1185, 1186), (1186, 1185), (1187, 1184), (1188, 1183), (1188, 1189), (1189, 1188), (1189, 1190), (1189, 1191), (1189, 1192), (1190, 1189), (1191, 1189), (1192, 1189), (1193, 1182), (1194, 1181), (1195, 1179), (1196, 1179), (1196, 1197), (1196, 1201), (1197, 1196), (1197, 1198), (1197, 1200), (1198, 1197), (1198, 1199), (1198, 1205), (1199, 1198), (1200, 1197), (1201, 1196), (1201, 1202), (1201, 1203), (1202, 1201), (1203, 1201), (1203, 1204), (1203, 1205), (1204, 1203), (1205, 1198), (1205, 1203), (1205, 1206), (1206, 1205), (1206, 1207), (1207, 1206), (1207, 1208), (1207, 1209), (1207, 1210), (1208, 1207), (1209, 1207), (1210, 1207), (1211, 1212), (1212, 1211), (1212, 1213), (1212, 1214), (1212, 1215), (1213, 1212), (1214, 1212), (1215, 1212), (1215, 1216), (1216, 1215), (1216, 1217), (1216, 1221), (1217, 1216), (1217, 1218), (1217, 1220), (1218, 1217), (1218, 1219), (1218, 1225), (1219, 1218), (1220, 1217), (1221, 1216), (1221, 1222), (1221, 1223), (1222, 1221), (1223, 1221), (1223, 1224), (1223, 1225), (1224, 1223), (1225, 1218), (1225, 1223), (1225, 1226), (1226, 1225), (1226, 1227), (1226, 1242), (1226, 1243), (1227, 1226), (1227, 1228), (1227, 1232), (1228, 1227), (1228, 1229), (1228, 1241), (1229, 1228), (1229, 1230), (1229, 1240), (1230, 1229), (1230, 1231), (1230, 1235), (1231, 1230), (1231, 1232), (1231, 1234), (1232, 1227), (1232, 1231), (1232, 1233), (1233, 1232), (1234, 1231), (1235, 1230), (1235, 1236), (1236, 1235), (1236, 1237), (1236, 1238), (1236, 1239), (1237, 1236), (1238, 1236), (1239, 1236), (1240, 1229), (1241, 1228), (1242, 1226), (1243, 1226), (1243, 1244), (1243, 1248), (1244, 1243), (1244, 1245), (1244, 1247), (1245, 1244), (1245, 1246), (1245, 1252), (1246, 1245), (1247, 1244), (1248, 1243), (1248, 1249), (1248, 1250), (1249, 1248), (1250, 1248), (1250, 1251), (1250, 1252), (1251, 1250), (1252, 1245), (1252, 1250), (1252, 1253), (1253, 1252), (1253, 1254), (1254, 1253), (1254, 1255), (1254, 1256), (1254, 1257), (1255, 1254), (1256, 1254), (1257, 1254), (1257, 1258), (1258, 1257), (1258, 1259), (1258, 1263), (1259, 1258), (1259, 1260), (1259, 1262), (1260, 1259), (1260, 1261), (1260, 1267), (1261, 1260), (1262, 1259), (1263, 1258), (1263, 1264), (1263, 1265), (1264, 1263), (1265, 1263), (1265, 1266), (1265, 1267), (1266, 1265), (1267, 1260), (1267, 1265), (1267, 1268), (1268, 1267), (1268, 1269), (1268, 1326), (1268, 1327), (1269, 1268), (1269, 1270), (1269, 1274), (1270, 1269), (1270, 1271), (1270, 1325), (1271, 1270), (1271, 1272), (1271, 1324), (1272, 1271), (1272, 1273), (1272, 1277), (1273, 1272), (1273, 1274), (1273, 1276), (1274, 1269), (1274, 1273), (1274, 1275), (1275, 1274), (1276, 1273), (1277, 1272), (1277, 1278), (1278, 1277), (1278, 1279), (1278, 1322), (1278, 1323), (1279, 1278), (1279, 1280), (1280, 1279), (1280, 1281), (1280, 1285), (1281, 1280), (1281, 1282), (1281, 1321), (1282, 1281), (1282, 1283), (1282, 1320), (1283, 1282), (1283, 1284), (1283, 1288), (1284, 1283), (1284, 1285), (1284, 1287), (1285, 1280), (1285, 1284), (1285, 1286), (1286, 1285), (1287, 1284), (1288, 1283), (1288, 1289), (1288, 1304), (1288, 1319), (1289, 1288), (1289, 1290), (1289, 1294), (1290, 1289), (1290, 1291), (1290, 1303), (1291, 1290), (1291, 1292), (1291, 1302), (1292, 1291), (1292, 1293), (1292, 1297), (1293, 1292), (1293, 1294), (1293, 1296), (1294, 1289), (1294, 1293), (1294, 1295), (1295, 1294), (1296, 1293), (1297, 1292), (1297, 1298), (1298, 1297), (1298, 1299), (1298, 1300), (1298, 1301), (1299, 1298), (1300, 1298), (1301, 1298), (1302, 1291), (1303, 1290), (1304, 1288), (1304, 1305), (1304, 1309), (1305, 1304), (1305, 1306), (1305, 1318), (1306, 1305), (1306, 1307), (1306, 1317), (1307, 1306), (1307, 1308), (1307, 1312), (1308, 1307), (1308, 1309), (1308, 1311), (1309, 1304), (1309, 1308), (1309, 1310), (1310, 1309), (1311, 1308), (1312, 1307), (1312, 1313), (1313, 1312), (1313, 1314), (1313, 1315), (1313, 1316), (1314, 1313), (1315, 1313), (1316, 1313), (1317, 1306), (1318, 1305), (1319, 1288), (1320, 1282), (1321, 1281), (1322, 1278), (1323, 1278), (1324, 1271), (1325, 1270), (1326, 1268), (1327, 1268), (1327, 1328), (1327, 1332), (1328, 1327), (1328, 1329), (1328, 1331), (1329, 1328), (1329, 1330), (1329, 1336), (1330, 1329), (1331, 1328), (1332, 1327), (1332, 1333), (1332, 1334), (1333, 1332), (1334, 1332), (1334, 1335), (1334, 1336), (1335, 1334), (1336, 1329), (1336, 1334), (1336, 1337), (1337, 1336), (1337, 1338), (1338, 1337), (1338, 1339), (1338, 1340), (1338, 1341), (1339, 1338), (1340, 1338), (1341, 1338), (1341, 1342), (1342, 1341), (1342, 1343), (1342, 1347), (1343, 1342), (1343, 1344), (1343, 1346), (1344, 1343), (1344, 1345), (1344, 1351), (1345, 1344), (1346, 1343), (1347, 1342), (1347, 1348), (1347, 1349), (1348, 1347), (1349, 1347), (1349, 1350), (1349, 1351), (1350, 1349), (1351, 1344), (1351, 1349), (1351, 1352), (1352, 1351), (1352, 1353), (1352, 1368), (1352, 1369), (1353, 1352), (1353, 1354), (1353, 1358), (1354, 1353), (1354, 1355), (1354, 1367), (1355, 1354), (1355, 1356), (1355, 1366), (1356, 1355), (1356, 1357), (1356, 1361), (1357, 1356), (1357, 1358), (1357, 1360), (1358, 1353), (1358, 1357), (1358, 1359), (1359, 1358), (1360, 1357), (1361, 1356), (1361, 1362), (1362, 1361), (1362, 1363), (1362, 1364), (1362, 1365), (1363, 1362), (1364, 1362), (1365, 1362), (1366, 1355), (1367, 1354), (1368, 1352), (1369, 1352), (1369, 1370), (1369, 1374), (1370, 1369), (1370, 1371), (1370, 1373), (1371, 1370), (1371, 1372), (1371, 1378), (1372, 1371), (1373, 1370), (1374, 1369), (1374, 1375), (1374, 1376), (1375, 1374), (1376, 1374), (1376, 1377), (1376, 1378), (1377, 1376), (1378, 1371), (1378, 1376), (1378, 1379), (1379, 1378), (1379, 1380), (1380, 1379), (1380, 1381), (1380, 1382), (1380, 1383), (1381, 1380), (1382, 1380), (1383, 1380), (1384, 1385), (1385, 1384), (1385, 1386), (1385, 1387), (1385, 1388), (1386, 1385), (1387, 1385), (1388, 1385), (1388, 1389), (1389, 1388), (1389, 1390), (1389, 1394), (1390, 1389), (1390, 1391), (1390, 1393), (1391, 1390), (1391, 1392), (1391, 1398), (1392, 1391), (1393, 1390), (1394, 1389), (1394, 1395), (1394, 1396), (1395, 1394), (1396, 1394), (1396, 1397), (1396, 1398), (1397, 1396), (1398, 1391), (1398, 1396), (1398, 1399), (1399, 1398), (1399, 1400), (1399, 1415), (1399, 1416), (1400, 1399), (1400, 1401), (1400, 1405), (1401, 1400), (1401, 1402), (1401, 1414), (1402, 1401), (1402, 1403), (1402, 1413), (1403, 1402), (1403, 1404), (1403, 1408), (1404, 1403), (1404, 1405), (1404, 1407), (1405, 1400), (1405, 1404), (1405, 1406), (1406, 1405), (1407, 1404), (1408, 1403), (1408, 1409), (1409, 1408), (1409, 1410), (1409, 1411), (1409, 1412), (1410, 1409), (1411, 1409), (1412, 1409), (1413, 1402), (1414, 1401), (1415, 1399), (1416, 1399), (1416, 1417), (1416, 1421), (1417, 1416), (1417, 1418), (1417, 1420), (1418, 1417), (1418, 1419), (1418, 1425), (1419, 1418), (1420, 1417), (1421, 1416), (1421, 1422), (1421, 1423), (1422, 1421), (1423, 1421), (1423, 1424), (1423, 1425), (1424, 1423), (1425, 1418), (1425, 1423), (1425, 1426), (1426, 1425), (1426, 1427), (1427, 1426), (1427, 1428), (1427, 1429), (1427, 1430), (1428, 1427), (1429, 1427), (1430, 1427), (1430, 1431), (1431, 1430), (1431, 1432), (1431, 1436), (1432, 1431), (1432, 1433), (1432, 1435), (1433, 1432), (1433, 1434), (1433, 1440), (1434, 1433), (1435, 1432), (1436, 1431), (1436, 1437), (1436, 1438), (1437, 1436), (1438, 1436), (1438, 1439), (1438, 1440), (1439, 1438), (1440, 1433), (1440, 1438), (1440, 1441), (1441, 1440), (1441, 1442), (1441, 1499), (1441, 1500), (1442, 1441), (1442, 1443), (1442, 1447), (1443, 1442), (1443, 1444), (1443, 1498), (1444, 1443), (1444, 1445), (1444, 1497), (1445, 1444), (1445, 1446), (1445, 1450), (1446, 1445), (1446, 1447), (1446, 1449), (1447, 1442), (1447, 1446), (1447, 1448), (1448, 1447), (1449, 1446), (1450, 1445), (1450, 1451), (1451, 1450), (1451, 1452), (1451, 1495), (1451, 1496), (1452, 1451), (1452, 1453), (1453, 1452), (1453, 1454), (1453, 1458), (1454, 1453), (1454, 1455), (1454, 1494), (1455, 1454), (1455, 1456), (1455, 1493), (1456, 1455), (1456, 1457), (1456, 1461), (1457, 1456), (1457, 1458), (1457, 1460), (1458, 1453), (1458, 1457), (1458, 1459), (1459, 1458), (1460, 1457), (1461, 1456), (1461, 1462), (1461, 1477), (1461, 1492), (1462, 1461), (1462, 1463), (1462, 1467), (1463, 1462), (1463, 1464), (1463, 1476), (1464, 1463), (1464, 1465), (1464, 1475), (1465, 1464), (1465, 1466), (1465, 1470), (1466, 1465), (1466, 1467), (1466, 1469), (1467, 1462), (1467, 1466), (1467, 1468), (1468, 1467), (1469, 1466), (1470, 1465), (1470, 1471), (1471, 1470), (1471, 1472), (1471, 1473), (1471, 1474), (1472, 1471), (1473, 1471), (1474, 1471), (1475, 1464), (1476, 1463), (1477, 1461), (1477, 1478), (1477, 1482), (1478, 1477), (1478, 1479), (1478, 1491), (1479, 1478), (1479, 1480), (1479, 1490), (1480, 1479), (1480, 1481), (1480, 1485), (1481, 1480), (1481, 1482), (1481, 1484), (1482, 1477), (1482, 1481), (1482, 1483), (1483, 1482), (1484, 1481), (1485, 1480), (1485, 1486), (1486, 1485), (1486, 1487), (1486, 1488), (1486, 1489), (1487, 1486), (1488, 1486), (1489, 1486), (1490, 1479), (1491, 1478), (1492, 1461), (1493, 1455), (1494, 1454), (1495, 1451), (1496, 1451), (1497, 1444), (1498, 1443), (1499, 1441), (1500, 1441), (1500, 1501), (1500, 1505), (1501, 1500), (1501, 1502), (1501, 1504), (1502, 1501), (1502, 1503), (1502, 1509), (1503, 1502), (1504, 1501), (1505, 1500), (1505, 1506), (1505, 1507), (1506, 1505), (1507, 1505), (1507, 1508), (1507, 1509), (1508, 1507), (1509, 1502), (1509, 1507), (1509, 1510), (1510, 1509), (1510, 1511), (1511, 1510), (1511, 1512), (1511, 1513), (1511, 1514), (1512, 1511), (1513, 1511), (1514, 1511), (1514, 1515), (1515, 1514), (1515, 1516), (1515, 1520), (1516, 1515), (1516, 1517), (1516, 1519), (1517, 1516), (1517, 1518), (1517, 1524), (1518, 1517), (1519, 1516), (1520, 1515), (1520, 1521), (1520, 1522), (1521, 1520), (1522, 1520), (1522, 1523), (1522, 1524), (1523, 1522), (1524, 1517), (1524, 1522), (1524, 1525), (1525, 1524), (1525, 1526), (1525, 1541), (1525, 1542), (1526, 1525), (1526, 1527), (1526, 1531), (1527, 1526), (1527, 1528), (1527, 1540), (1528, 1527), (1528, 1529), (1528, 1539), (1529, 1528), (1529, 1530), (1529, 1534), (1530, 1529), (1530, 1531), (1530, 1533), (1531, 1526), (1531, 1530), (1531, 1532), (1532, 1531), (1533, 1530), (1534, 1529), (1534, 1535), (1535, 1534), (1535, 1536), (1535, 1537), (1535, 1538), (1536, 1535), (1537, 1535), (1538, 1535), (1539, 1528), (1540, 1527), (1541, 1525), (1542, 1525), (1542, 1543), (1542, 1547), (1543, 1542), (1543, 1544), (1543, 1546), (1544, 1543), (1544, 1545), (1544, 1551), (1545, 1544), (1546, 1543), (1547, 1542), (1547, 1548), (1547, 1549), (1548, 1547), (1549, 1547), (1549, 1550), (1549, 1551), (1550, 1549), (1551, 1544), (1551, 1549), (1551, 1552), (1552, 1551), (1552, 1553), (1553, 1552), (1553, 1554), (1553, 1555), (1553, 1556), (1554, 1553), (1555, 1553), (1556, 1553), (1557, 1558), (1558, 1557), (1558, 1559), (1558, 1560), (1558, 1561), (1559, 1558), (1560, 1558), (1561, 1558), (1561, 1562), (1562, 1561), (1562, 1563), (1562, 1567), (1563, 1562), (1563, 1564), (1563, 1566), (1564, 1563), (1564, 1565), (1564, 1571), (1565, 1564), (1566, 1563), (1567, 1562), (1567, 1568), (1567, 1569), (1568, 1567), (1569, 1567), (1569, 1570), (1569, 1571), (1570, 1569), (1571, 1564), (1571, 1569), (1571, 1572), (1572, 1571), (1572, 1573), (1572, 1588), (1572, 1589), (1573, 1572), (1573, 1574), (1573, 1578), (1574, 1573), (1574, 1575), (1574, 1587), (1575, 1574), (1575, 1576), (1575, 1586), (1576, 1575), (1576, 1577), (1576, 1581), (1577, 1576), (1577, 1578), (1577, 1580), (1578, 1573), (1578, 1577), (1578, 1579), (1579, 1578), (1580, 1577), (1581, 1576), (1581, 1582), (1582, 1581), (1582, 1583), (1582, 1584), (1582, 1585), (1583, 1582), (1584, 1582), (1585, 1582), (1586, 1575), (1587, 1574), (1588, 1572), (1589, 1572), (1589, 1590), (1589, 1594), (1590, 1589), (1590, 1591), (1590, 1593), (1591, 1590), (1591, 1592), (1591, 1598), (1592, 1591), (1593, 1590), (1594, 1589), (1594, 1595), (1594, 1596), (1595, 1594), (1596, 1594), (1596, 1597), (1596, 1598), (1597, 1596), (1598, 1591), (1598, 1596), (1598, 1599), (1599, 1598), (1599, 1600), (1600, 1599), (1600, 1601), (1600, 1602), (1600, 1603), (1601, 1600), (1602, 1600), (1603, 1600), (1603, 1604), (1604, 1603), (1604, 1605), (1604, 1609), (1605, 1604), (1605, 1606), (1605, 1608), (1606, 1605), (1606, 1607), (1606, 1613), (1607, 1606), (1608, 1605), (1609, 1604), (1609, 1610), (1609, 1611), (1610, 1609), (1611, 1609), (1611, 1612), (1611, 1613), (1612, 1611), (1613, 1606), (1613, 1611), (1613, 1614), (1614, 1613), (1614, 1615), (1614, 1672), (1614, 1673), (1615, 1614), (1615, 1616), (1615, 1620), (1616, 1615), (1616, 1617), (1616, 1671), (1617, 1616), (1617, 1618), (1617, 1670), (1618, 1617), (1618, 1619), (1618, 1623), (1619, 1618), (1619, 1620), (1619, 1622), (1620, 1615), (1620, 1619), (1620, 1621), (1621, 1620), (1622, 1619), (1623, 1618), (1623, 1624), (1624, 1623), (1624, 1625), (1624, 1668), (1624, 1669), (1625, 1624), (1625, 1626), (1626, 1625), (1626, 1627), (1626, 1631), (1627, 1626), (1627, 1628), (1627, 1667), (1628, 1627), (1628, 1629), (1628, 1666), (1629, 1628), (1629, 1630), (1629, 1634), (1630, 1629), (1630, 1631), (1630, 1633), (1631, 1626), (1631, 1630), (1631, 1632), (1632, 1631), (1633, 1630), (1634, 1629), (1634, 1635), (1634, 1650), (1634, 1665), (1635, 1634), (1635, 1636), (1635, 1640), (1636, 1635), (1636, 1637), (1636, 1649), (1637, 1636), (1637, 1638), (1637, 1648), (1638, 1637), (1638, 1639), (1638, 1643), (1639, 1638), (1639, 1640), (1639, 1642), (1640, 1635), (1640, 1639), (1640, 1641), (1641, 1640), (1642, 1639), (1643, 1638), (1643, 1644), (1644, 1643), (1644, 1645), (1644, 1646), (1644, 1647), (1645, 1644), (1646, 1644), (1647, 1644), (1648, 1637), (1649, 1636), (1650, 1634), (1650, 1651), (1650, 1655), (1651, 1650), (1651, 1652), (1651, 1664), (1652, 1651), (1652, 1653), (1652, 1663), (1653, 1652), (1653, 1654), (1653, 1658), (1654, 1653), (1654, 1655), (1654, 1657), (1655, 1650), (1655, 1654), (1655, 1656), (1656, 1655), (1657, 1654), (1658, 1653), (1658, 1659), (1659, 1658), (1659, 1660), (1659, 1661), (1659, 1662), (1660, 1659), (1661, 1659), (1662, 1659), (1663, 1652), (1664, 1651), (1665, 1634), (1666, 1628), (1667, 1627), (1668, 1624), (1669, 1624), (1670, 1617), (1671, 1616), (1672, 1614), (1673, 1614), (1673, 1674), (1673, 1678), (1674, 1673), (1674, 1675), (1674, 1677), (1675, 1674), (1675, 1676), (1675, 1682), (1676, 1675), (1677, 1674), (1678, 1673), (1678, 1679), (1678, 1680), (1679, 1678), (1680, 1678), (1680, 1681), (1680, 1682), (1681, 1680), (1682, 1675), (1682, 1680), (1682, 1683), (1683, 1682), (1683, 1684), (1684, 1683), (1684, 1685), (1684, 1686), (1684, 1687), (1685, 1684), (1686, 1684), (1687, 1684), (1687, 1688), (1688, 1687), (1688, 1689), (1688, 1693), (1689, 1688), (1689, 1690), (1689, 1692), (1690, 1689), (1690, 1691), (1690, 1697), (1691, 1690), (1692, 1689), (1693, 1688), (1693, 1694), (1693, 1695), (1694, 1693), (1695, 1693), (1695, 1696), (1695, 1697), (1696, 1695), (1697, 1690), (1697, 1695), (1697, 1698), (1698, 1697), (1698, 1699), (1698, 1714), (1698, 1715), (1699, 1698), (1699, 1700), (1699, 1704), (1700, 1699), (1700, 1701), (1700, 1713), (1701, 1700), (1701, 1702), (1701, 1712), (1702, 1701), (1702, 1703), (1702, 1707), (1703, 1702), (1703, 1704), (1703, 1706), (1704, 1699), (1704, 1703), (1704, 1705), (1705, 1704), (1706, 1703), (1707, 1702), (1707, 1708), (1708, 1707), (1708, 1709), (1708, 1710), (1708, 1711), (1709, 1708), (1710, 1708), (1711, 1708), (1712, 1701), (1713, 1700), (1714, 1698), (1715, 1698), (1715, 1716), (1715, 1720), (1716, 1715), (1716, 1717), (1716, 1719), (1717, 1716), (1717, 1718), (1717, 1724), (1718, 1717), (1719, 1716), (1720, 1715), (1720, 1721), (1720, 1722), (1721, 1720), (1722, 1720), (1722, 1723), (1722, 1724), (1723, 1722), (1724, 1717), (1724, 1722), (1724, 1725), (1725, 1724), (1725, 1726), (1726, 1725), (1726, 1727), (1726, 1728), (1726, 1729), (1727, 1726), (1728, 1726), (1729, 1726), (1730, 1731), (1731, 1730), (1731, 1732), (1731, 1733), (1731, 1734), (1732, 1731), (1733, 1731), (1734, 1731), (1734, 1735), (1735, 1734), (1735, 1736), (1735, 1740), (1736, 1735), (1736, 1737), (1736, 1739), (1737, 1736), (1737, 1738), (1737, 1744), (1738, 1737), (1739, 1736), (1740, 1735), (1740, 1741), (1740, 1742), (1741, 1740), (1742, 1740), (1742, 1743), (1742, 1744), (1743, 1742), (1744, 1737), (1744, 1742), (1744, 1745), (1745, 1744), (1745, 1746), (1745, 1761), (1745, 1762), (1746, 1745), (1746, 1747), (1746, 1751), (1747, 1746), (1747, 1748), (1747, 1760), (1748, 1747), (1748, 1749), (1748, 1759), (1749, 1748), (1749, 1750), (1749, 1754), (1750, 1749), (1750, 1751), (1750, 1753), (1751, 1746), (1751, 1750), (1751, 1752), (1752, 1751), (1753, 1750), (1754, 1749), (1754, 1755), (1755, 1754), (1755, 1756), (1755, 1757), (1755, 1758), (1756, 1755), (1757, 1755), (1758, 1755), (1759, 1748), (1760, 1747), (1761, 1745), (1762, 1745), (1762, 1763), (1762, 1767), (1763, 1762), (1763, 1764), (1763, 1766), (1764, 1763), (1764, 1765), (1764, 1771), (1765, 1764), (1766, 1763), (1767, 1762), (1767, 1768), (1767, 1769), (1768, 1767), (1769, 1767), (1769, 1770), (1769, 1771), (1770, 1769), (1771, 1764), (1771, 1769), (1771, 1772), (1772, 1771), (1772, 1773), (1773, 1772), (1773, 1774), (1773, 1775), (1773, 1776), (1774, 1773), (1775, 1773), (1776, 1773), (1776, 1777), (1777, 1776), (1777, 1778), (1777, 1782), (1778, 1777), (1778, 1779), (1778, 1781), (1779, 1778), (1779, 1780), (1779, 1786), (1780, 1779), (1781, 1778), (1782, 1777), (1782, 1783), (1782, 1784), (1783, 1782), (1784, 1782), (1784, 1785), (1784, 1786), (1785, 1784), (1786, 1779), (1786, 1784), (1786, 1787), (1787, 1786), (1787, 1788), (1787, 1845), (1787, 1846), (1788, 1787), (1788, 1789), (1788, 1793), (1789, 1788), (1789, 1790), (1789, 1844), (1790, 1789), (1790, 1791), (1790, 1843), (1791, 1790), (1791, 1792), (1791, 1796), (1792, 1791), (1792, 1793), (1792, 1795), (1793, 1788), (1793, 1792), (1793, 1794), (1794, 1793), (1795, 1792), (1796, 1791), (1796, 1797), (1797, 1796), (1797, 1798), (1797, 1841), (1797, 1842), (1798, 1797), (1798, 1799), (1799, 1798), (1799, 1800), (1799, 1804), (1800, 1799), (1800, 1801), (1800, 1840), (1801, 1800), (1801, 1802), (1801, 1839), (1802, 1801), (1802, 1803), (1802, 1807), (1803, 1802), (1803, 1804), (1803, 1806), (1804, 1799), (1804, 1803), (1804, 1805), (1805, 1804), (1806, 1803), (1807, 1802), (1807, 1808), (1807, 1823), (1807, 1838), (1808, 1807), (1808, 1809), (1808, 1813), (1809, 1808), (1809, 1810), (1809, 1822), (1810, 1809), (1810, 1811), (1810, 1821), (1811, 1810), (1811, 1812), (1811, 1816), (1812, 1811), (1812, 1813), (1812, 1815), (1813, 1808), (1813, 1812), (1813, 1814), (1814, 1813), (1815, 1812), (1816, 1811), (1816, 1817), (1817, 1816), (1817, 1818), (1817, 1819), (1817, 1820), (1818, 1817), (1819, 1817), (1820, 1817), (1821, 1810), (1822, 1809), (1823, 1807), (1823, 1824), (1823, 1828), (1824, 1823), (1824, 1825), (1824, 1837), (1825, 1824), (1825, 1826), (1825, 1836), (1826, 1825), (1826, 1827), (1826, 1831), (1827, 1826), (1827, 1828), (1827, 1830), (1828, 1823), (1828, 1827), (1828, 1829), (1829, 1828), (1830, 1827), (1831, 1826), (1831, 1832), (1832, 1831), (1832, 1833), (1832, 1834), (1832, 1835), (1833, 1832), (1834, 1832), (1835, 1832), (1836, 1825), (1837, 1824), (1838, 1807), (1839, 1801), (1840, 1800), (1841, 1797), (1842, 1797), (1843, 1790), (1844, 1789), (1845, 1787), (1846, 1787), (1846, 1847), (1846, 1851), (1847, 1846), (1847, 1848), (1847, 1850), (1848, 1847), (1848, 1849), (1848, 1855), (1849, 1848), (1850, 1847), (1851, 1846), (1851, 1852), (1851, 1853), (1852, 1851), (1853, 1851), (1853, 1854), (1853, 1855), (1854, 1853), (1855, 1848), (1855, 1853), (1855, 1856), (1856, 1855), (1856, 1857), (1857, 1856), (1857, 1858), (1857, 1859), (1857, 1860), (1858, 1857), (1859, 1857), (1860, 1857), (1860, 1861), (1861, 1860), (1861, 1862), (1861, 1866), (1862, 1861), (1862, 1863), (1862, 1865), (1863, 1862), (1863, 1864), (1863, 1870), (1864, 1863), (1865, 1862), (1866, 1861), (1866, 1867), (1866, 1868), (1867, 1866), (1868, 1866), (1868, 1869), (1868, 1870), (1869, 1868), (1870, 1863), (1870, 1868), (1870, 1871), (1871, 1870), (1871, 1872), (1871, 1887), (1871, 1888), (1872, 1871), (1872, 1873), (1872, 1877), (1873, 1872), (1873, 1874), (1873, 1886), (1874, 1873), (1874, 1875), (1874, 1885), (1875, 1874), (1875, 1876), (1875, 1880), (1876, 1875), (1876, 1877), (1876, 1879), (1877, 1872), (1877, 1876), (1877, 1878), (1878, 1877), (1879, 1876), (1880, 1875), (1880, 1881), (1881, 1880), (1881, 1882), (1881, 1883), (1881, 1884), (1882, 1881), (1883, 1881), (1884, 1881), (1885, 1874), (1886, 1873), (1887, 1871), (1888, 1871), (1888, 1889), (1888, 1893), (1889, 1888), (1889, 1890), (1889, 1892), (1890, 1889), (1890, 1891), (1890, 1897), (1891, 1890), (1892, 1889), (1893, 1888), (1893, 1894), (1893, 1895), (1894, 1893), (1895, 1893), (1895, 1896), (1895, 1897), (1896, 1895), (1897, 1890), (1897, 1895), (1897, 1898), (1898, 1897), (1898, 1899), (1899, 1898), (1899, 1900), (1899, 1901), (1899, 1902), (1900, 1899), (1901, 1899), (1902, 1899), (1903, 1904), (1904, 1903), (1904, 1905), (1904, 1906), (1904, 1907), (1905, 1904), (1906, 1904), (1907, 1904), (1907, 1908), (1908, 1907), (1908, 1909), (1908, 1913), (1909, 1908), (1909, 1910), (1909, 1912), (1910, 1909), (1910, 1911), (1910, 1917), (1911, 1910), (1912, 1909), (1913, 1908), (1913, 1914), (1913, 1915), (1914, 1913), (1915, 1913), (1915, 1916), (1915, 1917), (1916, 1915), (1917, 1910), (1917, 1915), (1917, 1918), (1918, 1917), (1918, 1919), (1918, 1934), (1918, 1935), (1919, 1918), (1919, 1920), (1919, 1924), (1920, 1919), (1920, 1921), (1920, 1933), (1921, 1920), (1921, 1922), (1921, 1932), (1922, 1921), (1922, 1923), (1922, 1927), (1923, 1922), (1923, 1924), (1923, 1926), (1924, 1919), (1924, 1923), (1924, 1925), (1925, 1924), (1926, 1923), (1927, 1922), (1927, 1928), (1928, 1927), (1928, 1929), (1928, 1930), (1928, 1931), (1929, 1928), (1930, 1928), (1931, 1928), (1932, 1921), (1933, 1920), (1934, 1918), (1935, 1918), (1935, 1936), (1935, 1940), (1936, 1935), (1936, 1937), (1936, 1939), (1937, 1936), (1937, 1938), (1937, 1944), (1938, 1937), (1939, 1936), (1940, 1935), (1940, 1941), (1940, 1942), (1941, 1940), (1942, 1940), (1942, 1943), (1942, 1944), (1943, 1942), (1944, 1937), (1944, 1942), (1944, 1945), (1945, 1944), (1945, 1946), (1946, 1945), (1946, 1947), (1946, 1948), (1946, 1949), (1947, 1946), (1948, 1946), (1949, 1946), (1949, 1950), (1950, 1949), (1950, 1951), (1950, 1955), (1951, 1950), (1951, 1952), (1951, 1954), (1952, 1951), (1952, 1953), (1952, 1959), (1953, 1952), (1954, 1951), (1955, 1950), (1955, 1956), (1955, 1957), (1956, 1955), (1957, 1955), (1957, 1958), (1957, 1959), (1958, 1957), (1959, 1952), (1959, 1957), (1959, 1960), (1960, 1959), (1960, 1961), (1960, 2018), (1960, 2019), (1961, 1960), (1961, 1962), (1961, 1966), (1962, 1961), (1962, 1963), (1962, 2017), (1963, 1962), (1963, 1964), (1963, 2016), (1964, 1963), (1964, 1965), (1964, 1969), (1965, 1964), (1965, 1966), (1965, 1968), (1966, 1961), (1966, 1965), (1966, 1967), (1967, 1966), (1968, 1965), (1969, 1964), (1969, 1970), (1970, 1969), (1970, 1971), (1970, 2014), (1970, 2015), (1971, 1970), (1971, 1972), (1972, 1971), (1972, 1973), (1972, 1977), (1973, 1972), (1973, 1974), (1973, 2013), (1974, 1973), (1974, 1975), (1974, 2012), (1975, 1974), (1975, 1976), (1975, 1980), (1976, 1975), (1976, 1977), (1976, 1979), (1977, 1972), (1977, 1976), (1977, 1978), (1978, 1977), (1979, 1976), (1980, 1975), (1980, 1981), (1980, 1996), (1980, 2011), (1981, 1980), (1981, 1982), (1981, 1986), (1982, 1981), (1982, 1983), (1982, 1995), (1983, 1982), (1983, 1984), (1983, 1994), (1984, 1983), (1984, 1985), (1984, 1989), (1985, 1984), (1985, 1986), (1985, 1988), (1986, 1981), (1986, 1985), (1986, 1987), (1987, 1986), (1988, 1985), (1989, 1984), (1989, 1990), (1990, 1989), (1990, 1991), (1990, 1992), (1990, 1993), (1991, 1990), (1992, 1990), (1993, 1990), (1994, 1983), (1995, 1982), (1996, 1980), (1996, 1997), (1996, 2001), (1997, 1996), (1997, 1998), (1997, 2010), (1998, 1997), (1998, 1999), (1998, 2009), (1999, 1998), (1999, 2000), (1999, 2004), (2000, 1999), (2000, 2001), (2000, 2003), (2001, 1996), (2001, 2000), (2001, 2002), (2002, 2001), (2003, 2000), (2004, 1999), (2004, 2005), (2005, 2004), (2005, 2006), (2005, 2007), (2005, 2008), (2006, 2005), (2007, 2005), (2008, 2005), (2009, 1998), (2010, 1997), (2011, 1980), (2012, 1974), (2013, 1973), (2014, 1970), (2015, 1970), (2016, 1963), (2017, 1962), (2018, 1960), (2019, 1960), (2019, 2020), (2019, 2024), (2020, 2019), (2020, 2021), (2020, 2023), (2021, 2020), (2021, 2022), (2021, 2028), (2022, 2021), (2023, 2020), (2024, 2019), (2024, 2025), (2024, 2026), (2025, 2024), (2026, 2024), (2026, 2027), (2026, 2028), (2027, 2026), (2028, 2021), (2028, 2026), (2028, 2029), (2029, 2028), (2029, 2030), (2030, 2029), (2030, 2031), (2030, 2032), (2030, 2033), (2031, 2030), (2032, 2030), (2033, 2030), (2033, 2034), (2034, 2033), (2034, 2035), (2034, 2039), (2035, 2034), (2035, 2036), (2035, 2038), (2036, 2035), (2036, 2037), (2036, 2043), (2037, 2036), (2038, 2035), (2039, 2034), (2039, 2040), (2039, 2041), (2040, 2039), (2041, 2039), (2041, 2042), (2041, 2043), (2042, 2041), (2043, 2036), (2043, 2041), (2043, 2044), (2044, 2043), (2044, 2045), (2044, 2060), (2044, 2061), (2045, 2044), (2045, 2046), (2045, 2050), (2046, 2045), (2046, 2047), (2046, 2059), (2047, 2046), (2047, 2048), (2047, 2058), (2048, 2047), (2048, 2049), (2048, 2053), (2049, 2048), (2049, 2050), (2049, 2052), (2050, 2045), (2050, 2049), (2050, 2051), (2051, 2050), (2052, 2049), (2053, 2048), (2053, 2054), (2054, 2053), (2054, 2055), (2054, 2056), (2054, 2057), (2055, 2054), (2056, 2054), (2057, 2054), (2058, 2047), (2059, 2046), (2060, 2044), (2061, 2044), (2061, 2062), (2061, 2066), (2062, 2061), (2062, 2063), (2062, 2065), (2063, 2062), (2063, 2064), (2063, 2070), (2064, 2063), (2065, 2062), (2066, 2061), (2066, 2067), (2066, 2068), (2067, 2066), (2068, 2066), (2068, 2069), (2068, 2070), (2069, 2068), (2070, 2063), (2070, 2068), (2070, 2071), (2071, 2070), (2071, 2072), (2072, 2071), (2072, 2073), (2072, 2074), (2072, 2075), (2073, 2072), (2074, 2072), (2075, 2072)]
    folder_path = './data/'
    # if not os.path.exists(folder_path):
    #     os.makedirs(folder_path)
    # np.save(folder_path + 'solute_edge.npy', solute_edge_list)
    solute_edge_list = np.load("./data/solute_edge.npy")
    solute_edge_list = torch.from_numpy(solute_edge_list)
    solute_edge_u = solute_edge_list[:, 0]
    solute_edge_v = solute_edge_list[:, 1]
    return solute_adj, solute_feature, solute_edge_u, solute_edge_v

def get_solvent_adj(dict_solvent, solvent, dim, solvent_to_index):
    if (solvent == "ACE"):
        atom_nums = 6
        atom_g = 1490
        bonds = 'C1-H1', 'C1-H2', 'C1-H3', 'C1-C2', 'C2-N1'
        Bond_order = [1.0, 1.0, 1.0, 1.0, 3.0]
    elif (solvent == "NMF"):
        atom_nums = 9
        atom_g = 1350
        bonds = 'C1-O1', 'C1-H1', 'C1-N1', 'N1-H2', 'C2-N1', 'C2-H3', 'C2-H4', 'C2-H5'
        Bond_order = [2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
    solvent_adj = torch.zeros(dim,dim)
    solvent_feature = []
    index = 0
    bonds_to_index = {}
    for connect_atom in bonds:
        left_atom = connect_atom.split("-")[0]
        right_atom = connect_atom.split("-")[-1]
        bonds_to_index[connect_atom] = index
        index += 1
        for i in range(atom_g):
            left_atom_value = dict_solvent[left_atom] + atom_nums * i
            right_atom_value = dict_solvent[right_atom] + atom_nums * i
            solvent_adj[left_atom_value][right_atom_value] = 1
            solvent_adj[right_atom_value][left_atom_value] = 1
    for i in range(atom_nums):
        for j in range(atom_nums):
            if (solute_adj[i][j] == 1):
                left_atom = solvent_to_index[i]
                right_atom = solvent_to_index[j]
                bonds1 = left_atom + "-" + right_atom
                bonds2 = right_atom + "-" + left_atom
                if bonds1 in bonds_to_index:
                    bond_index = bonds_to_index[bonds1]
                elif bonds2 in bonds_to_index:
                    bond_index = bonds_to_index[bonds2]
                solvent_feature.append(Bond_order[bond_index])
    # A_loop = torch.eye(atom_nums*atom_g, atom_nums*atom_g)
    # A_loop = torch.cat((A_loop,torch.zeros(dim - atom_nums*atom_g,atom_nums*atom_g)), 0)
    # A_loop = torch.cat((A_loop, torch.zeros(dim, dim - atom_nums * atom_g)), 1)
    solvent_feature = torch.tensor(solvent_feature)
    temp = solvent_feature
    for i in range(atom_g - 1):
        solvent_feature = torch.cat((solvent_feature, temp))
    solvent_feature = solvent_feature.reshape(-1, 1)
    # solvent_adj =  normalize(solvent_adj + A_loop)
    solvent_edge_list = []
    folder_path = './data/'
    if not os.path.exists(folder_path):
        os.makedirs(folder_path)
    # for i in range(solvent_adj.shape[0]):
    #     for j in range(solvent_adj.shape[1]):
    #         if (solvent_adj[i][j] != 0):
    #             solvent_edge_list.append((i,j))

    # np.save(folder_path + 'NMFsolvent_edge.npy', solvent_edge_list)
    solvent_edge_list = np.load("./data/" +solvent+"solvent_edge.npy")
    solvent_edge_list = torch.from_numpy(solvent_edge_list)
    # print("solvent_edge_list=",solvent_edge_list.shape) (14900,2)
    # print("len(solvent_edge_list)=", len(solvent_edge_list))
    solvent_edge_u = solvent_edge_list[:, 0]
    solvent_edge_v = solvent_edge_list[:, 1]
    return solvent_adj, solvent_feature, solvent_edge_u, solvent_edge_v
    #ACE ACE_solvent_adj.shape= torch.Size([8940, 8940]) ACE_solvent_edge_features.shape= torch.Size([14900, 1]) ACE_solvent_edge_u.shape= torch.Size([14900]) ACE_solvent_edge_v.shape= torch.Size([14900])


def get_len_matrix(len_list):
    len_list = np.array(len_list)

    max_nodes = np.sum(len_list)
    curr_sum = 0
    len_matrix = []
    for l in len_list:
        curr = np.zeros(max_nodes)
        curr[curr_sum:curr_sum + l] = 1
        len_matrix.append(curr)
        curr_sum += l
    return torch.from_numpy(np.array(len_matrix))


def collate(samples):
    solute_graphs, solvent_graphs, labels = map(list, zip(*samples))
    solute_graphs = dgl.batch(solute_graphs)
    solvent_graphs = dgl.batch(solvent_graphs)
    solute_len_matrix = get_len_matrix(solute_graphs.batch_num_nodes())
    solvent_len_matrix = get_len_matrix(solvent_graphs.batch_num_nodes())
    return solute_graphs, solvent_graphs, solute_len_matrix, solvent_len_matrix, labels



class trainset(Dataset):
    def __init__(self, solvent_str,rootdir, lable_index,solute_edge_features,solvent_edge_features,solute_edge_u, solute_edge_v,solvent_edge_u, solvent_edge_v):
        self.root = rootdir
        solute_list = []
        solvent_list = []
        lables_list = []
        path_list= readFileData(solvent_str, rootdir, lable_index)  # 得到对应ACEx.pdb文件的list
        # 对所有的ACE.pdb文件里的数据进行预处理
        current_data = 0
        atoms_dict = {'H': 0, 'C': 1, 'O': 2, 'N': 3, 'S': 4,
                'F': 5}  # count0= 4566 countN= 3486 countC= 13194 countF= 216 countS= 324 countH= 26274
        for path in path_list:
            solute = dgl.DGLGraph()
            solvent = dgl.DGLGraph()
            current_data = current_data + 1
            if(current_data%100 == 9):
                print("path=",path,"current_data=",current_data,",all_data=",len(path_list),"")
            file = open(path, "r")
            file_list = file.readlines()
            temp_result_list = []
            for i in range(5, len(file_list) - 2):
                temp_data = file_list[i].strip().split('1.00  0.00')[0][26:].strip()
                temp_data = temp_data.split('.')
                temp_atom = file_list[i][13:16].strip()  # 该点所对应的原子
                single_temp_atom = file_list[i][13]
                x = float(temp_data[0] + "." + temp_data[1][0:3])
                y = float(temp_data[1][3:].strip() + "." + temp_data[2][0:3])
                z = float(temp_data[2][3:].strip() + "." + temp_data[3][0:3])
                temp_result_list.append(atoms_dict[single_temp_atom])
                temp_result_list.append(x)
                temp_result_list.append(y)
                temp_result_list.append(z)
            temp = torch.tensor(temp_result_list).reshape(-1, 4)

            solute_data = temp[:173 * 12, :]
            solute.add_nodes(173 * 12)
            # print("solute_data.shape=", solute_data.shape,"solute_edge_features.shape=",solute_edge_features.shape) #torch.Size([2076, 4])
            # print("solute_edge_u.shape=", solute_edge_u.shape, "solute_edge_v.shape=", solute_edge_v.shape)
            solute.ndata['x'] = solute_data
            solute.add_edge(solute_edge_u,solute_edge_v)
            # print("count_solute=",count_solute) #4416
            # print("solute_edge_features.shape=",solute_edge_features.shape) #torch.Size([4416])
            solute.edata['w'] = solute_edge_features
            solute_list.append(solute)  # 存入每个ACE文件的溶质图
            # print("sssssssssssssssssssssssssssssssssssssssssssss")
            solvent_data = temp[173 * 12:, :]
            if (solvent_str == "ACE"):
                solvent.add_nodes(6 * 1490)
            elif (solvent_str == "NMF"):
                solvent.add_nodes(9 * 1350)
            # print("solvent_data.shape=",solvent_data.shape) #torch.Size([8940, 4])
            solvent.ndata['x'] = solvent_data
            solvent.add_edge(solvent_edge_u, solvent_edge_v)
            # print("count_solvent=",count_solvent)
            # print("solvent_edge_features.shape=",solvent_edge_features.shape)
            solvent.edata['w'] = solvent_edge_features
            solvent_list.append(solvent)  # 存入每个文件的溶剂图
        if (solvent_str == "ACE"):
            total_labels = ACE_total_labels
        elif (solvent_str == "NMF"):
            total_labels = NMF_total_labels
        for i in range(len(lable_index)):
            lables_list.append(total_labels[lable_index[i]])# 存入每个ACE文件的标签
        self.solute_list = solute_list
        self.solvent_list = solvent_list
        self.lables_list = lables_list  # 存入所有mdx 文件对应的output值

    def __getitem__(self, index):
        solute_list = self.solute_list[index]
        solvent_list = self.solvent_list[index]
        lable = self.lables_list[index]
        # print("index=",index,"len(self.solute_list)=",len(self.solute_list))
        return [solute_list, solvent_list, lable]

    def __len__(self):
        return len(self.solute_list)


def load_train(solvent, collate,root_path, batch_size, label_index,solute_edge_features,solvent_edge_features,solute_edge_u, solute_edge_v,solvent_edge_u, solvent_edge_v):
    data = trainset(solvent, root_path, label_index,solute_edge_features,solvent_edge_features,solute_edge_u, solute_edge_v,solvent_edge_u, solvent_edge_v)
    print("data=", data)

    loader = torch.utils.data.DataLoader(data, collate_fn=collate,batch_size=batch_size, shuffle=False, drop_last=False, num_workers=12)
    return loader


def vali(model, vali_loader, criterion, solvent):
    model.eval()
    total_loss = []
    for i_batch, batch_data in tqdm(enumerate(vali_loader)):
        solute_graphs = batch_data[0]
        solvent_graphs = batch_data[1]
        solute_len_matrix = batch_data[2]
        solvent_len_matrix = batch_data[3]
        labels = torch.tensor(batch_data[4]).to(DEVICE)
        solute_graphs = solute_graphs.to(DEVICE)
        solvent_graphs = solvent_graphs.to(DEVICE)
        solute_len_matrix = solute_len_matrix.to(DEVICE)
        solvent_len_matrix = solvent_len_matrix.to(DEVICE)

        outputs = model(solute_graphs, solvent_graphs, solute_len_matrix, solvent_len_matrix).squeeze(-1)
        loss = criterion(outputs.detach().cpu(), labels.detach().cpu())
        print(solvent + " outputs=", outputs)
        print(solvent + " labels=", labels)
        print(solvent + " loss=", loss)
        total_loss.append(loss)
    total_loss = np.average(total_loss)
    model.train()
    return total_loss


def train(model, epoch, train_loader, solvent, val_loader, criterion):
    model.train()
    train_loss = []
    running_loss = 0
    count = 0
    for i_batch, batch_data in tqdm(enumerate(train_loader)):
        count = count + 1
        solute_graphs = batch_data[0]
        solvent_graphs = batch_data[1]
        solute_len_matrix = batch_data[2]
        solvent_len_matrix = batch_data[3]
        labels = torch.tensor(batch_data[4]).to(DEVICE)
        # print("type(labels)=",type(labels))
        # print("labels=", labels)
        solute_graphs = solute_graphs.to(DEVICE)
        solvent_graphs = solvent_graphs.to(DEVICE)
        solute_len_matrix = solute_len_matrix.to(DEVICE)
        solvent_len_matrix = solvent_len_matrix.to(DEVICE)

        optimizer.zero_grad()
        with torch.set_grad_enabled(True):  # 当requires_grad设置为False时,反向传播时就不会自动求导了，因此大大节约了显存或者说内存。
            outputs = model(solute_graphs, solvent_graphs, solute_len_matrix, solvent_len_matrix).squeeze(-1)
            loss = criterion(outputs, labels)
        loss.backward()
        optimizer.step()
        running_loss += loss.item()
        train_loss.append(loss.item())
        if (i_batch % 1000 == 9):
            print(solvent + " outputs=", outputs)
            print(solvent + " labels=", labels)
            print(solvent + " loss=", loss)
            print("\titers: {0}, epoch: {1} | loss: {2:.7f}".format(i_batch + 1, epoch + 1, loss.item()))
    train_loss = np.average(train_loss)
    # vali_loss = vali(model, val_loader, criterion, solvent)
    writer.add_scalar(solvent + 'train loss', train_loss, epoch + 1)
    # writer.add_scalar(solvent + 'train_vali loss', vali_loss, epoch + 1)
    # return vali_loss



def test(test_loader, solvent):
    model.eval()
    SUM1 = 0
    SUM2 = 0
    SUM3 = 0
    SUM4 = 0
    SUM5 = 0
    for i_batch, batch_data in tqdm(enumerate(test_loader)):
        solute_graphs = batch_data[0]
        solvent_graphs = batch_data[1]
        solute_len_matrix = batch_data[2]
        solvent_len_matrix = batch_data[3]
        labels = torch.tensor(batch_data[4]).to(DEVICE)
        # print("type(labels)=",type(labels))
        # print("labels=", labels)
        solute_graphs = solute_graphs.to(DEVICE)
        solvent_graphs = solvent_graphs.to(DEVICE)
        solute_len_matrix = solute_len_matrix.to(DEVICE)
        solvent_len_matrix = solvent_len_matrix.to(DEVICE)
        with torch.set_grad_enabled(False):  # 当requires_grad设置为False时,反向传播时就不会自动求导了，因此大大节约了显存或者说内存。
            outputs = model(solute_graphs, solvent_graphs, solute_len_matrix, solvent_len_matrix).squeeze(-1)
        deviation = abs((outputs - labels) / labels)
        print(solvent + "outputs=", outputs)
        print(solvent + "labels=", labels)
        print(solvent + "deviation=", deviation)
        for i in range(deviation.shape[0]):
            if (deviation[i] < 0.01):
                SUM1 = SUM1 + 1
            if (deviation[i] < 0.02):
                SUM2 = SUM2 + 1
            if (deviation[i] < 0.03):
                SUM3 = SUM3 + 1
            if (deviation[i] < 0.04):
                SUM4 = SUM4 + 1
            if (deviation[i] < 0.05):
                SUM5 = SUM5 + 1
    temp = []
    temp.append(SUM1)
    temp.append(SUM2)
    temp.append(SUM3)
    temp.append(SUM4)
    temp.append(SUM5)
    sum = np.array(temp)
    print("sum=",sum)
    folder_path = './results/'  + solvent +"/"
    if not os.path.exists(folder_path):
        os.makedirs(folder_path)

    # 保存了预测出来的长度的数据
    np.save(folder_path + 'deviation.npy', sum)

if __name__ == '__main__':
    data_list = []
    for i in range(100000):
        data_list.append(i)
    train_lable_index, test_lable_index = train_test_split(data_list, train_size=0.7, random_state=42)
    # test_lable_index, val_lable_index = train_test_split(lable_index, train_size=0.5, random_state=42)

    dict_solute, solute_to_index = get_solute_position(args.ACE_data_src)
    solute_adj, solute_edge_features, solute_edge_u, solute_edge_v = get_solute_adj(solute_to_index)

    # ACE_dict_solvent, ACE_solvent_to_index = get_solvent_position(args.ACE_data_src, "ACE")
    NMF_dict_solvent, NMF_solvent_to_index = get_solvent_position(args.NMF_data_src, "NMF")

    # ACE_solvent_adj, ACE_solvent_edge_features, ACE_solvent_edge_u, ACE_solvent_edge_v = get_solvent_adj(ACE_dict_solvent, "ACE", 8940, ACE_solvent_to_index)
    NMF_solvent_adj, NMF_solvent_edge_features, NMF_solvent_edge_u, NMF_solvent_edge_v = get_solvent_adj(NMF_dict_solvent, "NMF", 12150, NMF_solvent_to_index)

    # train_loader_ACE = load_train("ACE", collate, args.ACE_data_src, args.batchsize, train_lable_index, solute_edge_features, ACE_solvent_edge_features, solute_edge_u, solute_edge_v, ACE_solvent_edge_u, ACE_solvent_edge_v)
    train_loader_NMF = load_train("NMF", collate, args.NMF_data_src, args.batchsize, train_lable_index, solute_edge_features, NMF_solvent_edge_features, solute_edge_u, solute_edge_v, NMF_solvent_edge_u, NMF_solvent_edge_v)

    # val_loader_ACE = load_train("ACE", collate, args.ACE_data_src, args.batchsize, val_lable_index,
    #                               solute_edge_features, ACE_solvent_edge_features, solute_edge_u, solute_edge_v,
    #                               ACE_solvent_edge_u, ACE_solvent_edge_v)
    # val_loader_NMF = load_train("NMF", collate, args.NMF_data_src, args.batchsize, val_lable_index,
    #                               solute_edge_features, NMF_solvent_edge_features, solute_edge_u, solute_edge_v,
    #                               NMF_solvent_edge_u, NMF_solvent_edge_v)

    #
    model = MyCIGCN(node_input_dim=4,
                  edge_input_dim=1,
                  node_hidden_dim=4,
                  edge_hidden_dim=1,
                  num_step_message_passing=6
                  )
    model = model.to(DEVICE)
    optimizer = torch.optim.Adam(model.parameters(), lr=args.lr, betas=(0.9, 0.99))
    criterion = torch.nn.MSELoss()
    #
    # early_stopping = EarlyStopping(patience=args.patience, verbose=True)
    # path = "./model3"
    # if not os.path.exists(path):
    #     os.makedirs(path)
    for epoch in range(10):
        # train(model, epoch, train_loader_ACE, "ACE", "val_loader_ACE", criterion)
        train(model, epoch, train_loader_NMF, "NMF", "val_loader_NMF", criterion)
        # adjust_learning_rate(optimizer, epoch + 1, args)
        # early_stopping(vali_loss1 + vali_loss2, model, path)
        # if early_stopping.early_stop:
        #     print("Early stopping!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
        #     break
    # best_model_path = path + '/' + 'checkpoint.pth'
    # model.load_state_dict(torch.load(best_model_path))
    # #test

    # test_loader_ACE = load_train("ACE", collate, args.ACE_data_src, args.batchsize, test_lable_index,
    #                               solute_edge_features, ACE_solvent_edge_features, solute_edge_u, solute_edge_v,
    #                               ACE_solvent_edge_u, ACE_solvent_edge_v)

    test_loader_NMF = load_train("NMF", collate, args.NMF_data_src, args.batchsize, test_lable_index,
                              solute_edge_features, NMF_solvent_edge_features, solute_edge_u, solute_edge_v, NMF_solvent_edge_u,
                              NMF_solvent_edge_v)

    # test(test_loader_ACE, "ACE")
    test(test_loader_NMF, "NMF")
